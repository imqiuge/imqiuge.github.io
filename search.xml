<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C#配合开发公众号尝试（处理JSON数据)</title>
      <link href="/2019/06/25/C-%E9%85%8D%E5%90%88%E5%BC%80%E5%8F%91%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%9D%E8%AF%95/"/>
      <url>/2019/06/25/C-%E9%85%8D%E5%90%88%E5%BC%80%E5%8F%91%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%9D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>初步尝试用C#直接调用socket操作公众号的信息。</p><p>1.VS的NuGet里安装Newtonsoft.Json包</p><p>2.用现成的平台生成JSON数据的类:</p><blockquote><p><a href="http://json2csharp.chahuo.com/" target="_blank" rel="noopener">http://json2csharp.chahuo.com/</a></p><p><a href="http://tool.chinaz.com/tools/json2entity.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/json2entity.aspx</a></p><p>以上2个均可</p></blockquote><p><code>{&quot;errcode&quot;:42001,&quot;errmsg&quot;:&quot;access_token expired hint: [E24ZKa00228879!]&quot;}</code></p><p>这个调用ACCESS_TOKEN返回的错误，先拿这个测试，具体使用时要判断。</p><p>3.实现类</p><pre class=" language-csharp"><code class="language-csharp"><span class="token keyword">using</span> Newtonsoft<span class="token punctuation">.</span>Json<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Root</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/// &lt;summary></span>            <span class="token comment" spellcheck="true">/// Errcode</span>            <span class="token comment" spellcheck="true">/// &lt;/summary></span>            <span class="token keyword">public</span> <span class="token keyword">int</span> errcode <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">/// &lt;summary></span>            <span class="token comment" spellcheck="true">/// access_token expired hint: [E24ZKa00228879!]</span>            <span class="token comment" spellcheck="true">/// &lt;/summary></span>            <span class="token keyword">public</span> <span class="token keyword">string</span> errmsg <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token punctuation">}</span>            <span class="token keyword">string</span> jsonText <span class="token operator">=</span> <span class="token string">"{\"errcode\":42001,\"errmsg\":\"access_token expired hint: [E24ZKa00228879!]\"}"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//要有[]</span>            Root item <span class="token operator">=</span> JsonConvert<span class="token punctuation">.</span><span class="token generic-method function">DeserializeObject<span class="token punctuation">&lt;</span>Root<span class="token punctuation">></span></span><span class="token punctuation">(</span>jsonText<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//反序列化json字符串得到对象</span>            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>errcode<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>errmsg<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公众号 </tag>
            
            <tag> C# </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公众号开发</title>
      <link href="/2019/06/25/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/"/>
      <url>/2019/06/25/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>测试号信息</p><!--access_token(需要生成):--><!--22_5jWrCdpC9d3MaMcQbAMlEDydL7xv3CDUiQg6ZtbRRMjRY9MYxL9C5Z3pcw2yTqb0rAd5lmYceTI25KlTSEJwV6WThknJLS8YAewLCUDTQBNfbB78DJoSaifOWKU_3ftv6NTGJ7zD7ccDovYtNFSiABAQIV--><hr><h3 id="微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）"><a href="#微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）" class="headerlink" title="微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）"></a><code>微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）</code></h3><p><code>https://mp.weixin.qq.com/debug/</code></p><p>第一步：<br>先需要基础支持中填写appid与secret获取access_token接口</p><p>或者浏览器GET，返回的就是access_token<br><a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=xxx&amp;secret=xxx" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=xxx&amp;secret=xxx</a><br>返回值：<br>{“access_token”:”22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL”,”expires_in”:7200}</p><hr><h3 id="获取微信服务器IP地址"><a href="#获取微信服务器IP地址" class="headerlink" title="获取微信服务器IP地址"></a>获取微信服务器IP地址</h3><p><a href="https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL</a><br>返回值<br>{“ip_list”:[“101.226.233.139”,”223.166.222.112”]}</p><hr><h3 id="获取模板列表"><a href="#获取模板列表" class="headerlink" title="获取模板列表"></a>获取模板列表</h3><p><a href="https://api.weixin.qq.com/cgi-bin/template/get_all_private_template?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/template/get_all_private_template?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL</a><br>返回值<br>{“template_list”:[{“template_id”:”sygppCzs-yyenN92lCuOC7OlMhe6Q84Ow1ZIH3KpmSM”,”title”:”2265”,”primary_industry”:””,”deputy_industry”:””,”content”:”65656565”,”example”:””}]}</p><hr><h5 id="上传文件得到media-id-gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR-cRB7aqUSdf-bNo0aV5d"><a href="#上传文件得到media-id-gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR-cRB7aqUSdf-bNo0aV5d" class="headerlink" title="上传文件得到media_id    :gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d"></a>上传文件得到media_id    :gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d</h5><hr><h3 id="给用户发文本消息"><a href="#给用户发文本消息" class="headerlink" title="给用户发文本消息"></a>给用户发文本消息</h3><p>（1）发送文本消息<br><code>{</code><br>    <code>&quot;touser&quot;: &quot;oVd4s6JRqpGeUjxCxPQXnO5l4BC0&quot;,</code><br>    <code>&quot;msgtype&quot;: &quot;text&quot;,</code><br>    <code>&quot;text&quot;: {</code><br>        <code>&quot;content&quot;: &quot;哥几个喝几杯!&quot;</code><br>    <code>}</code><br><code>}</code></p><hr><h3 id="（2）发送图片消息"><a href="#（2）发送图片消息" class="headerlink" title="（2）发送图片消息"></a>（2）发送图片消息</h3><p>{    “touser”:”oVd4s6JRqpGeUjxCxPQXnO5l4BC0”,<br>    “msgtype”:”image”,<br>    “image”:<br>    {<br>      “media_id”:”gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d”<br>    }<br>}</p><hr><p>以下部分测试未成功<br>{    “touser”:”oVd4s6JRqpGeUjxCxPQXnO5l4BC0”,<br>    “msgtype”:”mpnews”,<br>    “mpnews”:<br>    {<br>         “media_id”:”gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d”<br>    }<br>}</p><p>发送图文消息（点击跳转到外链） 图文消息条数限制在8条以内，注意，如果图文数超过8，则将会无响应。<br>{    “touser”:”oVd4s6JRqpGeUjxCxPQXnO5l4BC0”,<br>    “msgtype”:”news”,<br>    “news”:{<br>        “articles”: [<br>         {<br>             “title”:”Happy Day”,<br>             “description”:”Is Really A Happy Day”,<br>             “url”:”URL”,<br>             “picurl”:”PIC_URL”<br>         },<br>         {<br>             “title”:”Happy Day”,<br>             “description”:”Is Really A Happy Day”,<br>             “url”:”URL”,<br>             “picurl”:”PIC_URL”<br>         }<br>         ]<br>    }<br>}</p>]]></content>
      
      
      
        <tags>
            
            <tag> 公众号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery主题安装使用</title>
      <link href="/2019/06/24/hexo-theme-matery%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/06/24/hexo-theme-matery%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code>文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre><code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre><code>---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre><code>---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><h3 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情连接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre><code>---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre><code>[{    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http://luokangyuan.com/&quot;,    &quot;title&quot;: &quot;前去学习&quot;}, {    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https://blinkfox.github.io/&quot;,    &quot;title&quot;: &quot;前去学习&quot;}, {    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;ttps://me.csdn.net/jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;}]</code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre><code>npm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre><code>highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime/preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:</code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre><code>npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>search:  path: search.xml  field: post</code></pre><h3 id="中文链接转拼音（可选的）"><a href="#中文链接转拼音（可选的）" class="headerlink" title="中文链接转拼音（可选的）"></a>中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre><code>npm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;</code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（可选的）"><a href="#文章字数统计插件（可选的）" class="headerlink" title="文章字数统计插件（可选的）"></a>文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre><code>npm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre><code>wordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true</code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre><code>npm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre><code>&lt;a href=&quot;https://github.com/blinkfox&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;访问我的GitHub&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;    &lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;&lt;/a&gt;</code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fa-facebook</code></li><li>Twitter: <code>fa-twitter</code></li><li>Google-plus: <code>fa-google-plus</code></li><li>Linkedin: <code>fa-linkedin</code></li><li>Tumblr: <code>fa-tumblr</code></li><li>Medium: <code>fa-medium</code></li><li>Slack: <code>fa-slack</code></li><li>新浪微博: <code>fa-weibo</code></li><li>微信: <code>fa-wechat</code></li><li>QQ: <code>fa-qq</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>4.7.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre><code>[{    &quot;name&quot;: &quot;五月雨变奏电音&quot;,    &quot;artist&quot;: &quot;AnimeVibe&quot;,    &quot;url&quot;: &quot;http://xxx.com/music1.mp3&quot;,    &quot;cover&quot;: &quot;http://xxx.com/music-cover1.png&quot;}, {    &quot;name&quot;: &quot;Take me hand&quot;,    &quot;artist&quot;: &quot;DAISHI DANCE,Cecile Corbel&quot;,    &quot;url&quot;: &quot;/medias/music/music2.mp3&quot;,    &quot;cover&quot;: &quot;/medias/music/cover2.png&quot;}, {    &quot;name&quot;: &quot;Shape of You&quot;,    &quot;artist&quot;: &quot;J.Fla&quot;,    &quot;url&quot;: &quot;http://xxx.com/music3.mp3&quot;,    &quot;cover&quot;: &quot;http://xxx.com/music-cover3.png&quot;}]</code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre><code># 是否在首页显示音乐.music:  enable: true  showTitle: false  title: 听听音乐  fixed: false # 是否开启吸底模式  autoplay: false # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39; # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;list&#39; # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39; # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false # 列表默认折叠  listMaxHeight: # 列表最大高度</code></pre><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code>中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code>中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code>文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre><code>---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---</code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre><code>---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><a href="https://camo.githubusercontent.com/90a2351868a22d39ceac2b4450f8596dc3ce1f58/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/90a2351868a22d39ceac2b4450f8596dc3ce1f58/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67" alt="首页"></a></p><p><a href="https://camo.githubusercontent.com/9a4e16a483752d1a34b222c01bbb36793f26f9df/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d322e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/9a4e16a483752d1a34b222c01bbb36793f26f9df/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d322e706e67" alt="首页推荐文章"></a></p><p><a href="https://camo.githubusercontent.com/47728a9ce38c1abffac23330897a43ba0b3aeb4a/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d332e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/47728a9ce38c1abffac23330897a43ba0b3aeb4a/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d332e706e67" alt="首页文章列表"></a></p><p><a href="https://camo.githubusercontent.com/48b8333fe4fc39346bcc5db8d3b30bf20d74cbdf/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d372e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/48b8333fe4fc39346bcc5db8d3b30bf20d74cbdf/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d372e706e67" alt="首页文章列表"></a></p><p><a href="https://camo.githubusercontent.com/da597fef194876343912db2cb022b180aeff587d/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d382e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/da597fef194876343912db2cb022b180aeff587d/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d382e706e67" alt="首页文章列表"></a></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre><code>/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */.bg-color {    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);}@-webkit-keyframes rainbow {   /* 动态切换背景颜色. */}@keyframes rainbow {    /* 动态切换背景颜色. */}</code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre><code>$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(/medias/banner/&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/06/24/%E6%88%91%E6%98%AF%E5%A5%BD%E5%A4%A9%E6%8D%AE/"/>
      <url>/2019/06/24/%E6%88%91%E6%98%AF%E5%A5%BD%E5%A4%A9%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>sdfsd</p><pre class=" language-csharp"><code class="language-csharp"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span></code></pre><h2 id="我是好天据"><a href="#我是好天据" class="headerlink" title="我是好天据"></a>我是好天据</h2><table><thead><tr><th>123</th><th>123</th><th>123</th></tr></thead><tbody><tr><td>123</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>ddd</td><td></td><td></td></tr></tbody></table><p><img src="C:%5CUsers%5CAdministrator%5CPictures%5Cwallhaven-769351.jpg" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>atom插件</title>
      <link href="/2019/06/09/atom%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/06/09/atom%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>###测试语句</p><pre><code>printf(&quot;测试&quot;);</code></pre><pre><code>sequenceDiagramddddA-&gt;&gt;B: How are you?B-&gt;&gt;A: Great!</code></pre><p>##CODE<br>this is inline code: ‘some code here’.</p><pre><code>javapublic classs hello{}</code></pre><p>==234234==<br>序号 | 项目<br>—|—ddddd<br>11111 | 22222<br>3333 | 4444</p><blockquote><p>zzz</p></blockquote><p>++……++<br>==这个是高亮标识==</p><p>test.jpg</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>about theme yilia</title>
      <link href="/2019/06/05/about-theme-yilia/"/>
      <url>/2019/06/05/about-theme-yilia/</url>
      
        <content type="html"><![CDATA[<p>#git的hexo目录中执行#</p><pre><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre><p>会下载到theme目录中。再改配置<br>修改hexo根目录下的 _</p><pre><code>config.yml ： theme: yilia</code></pre><p>这样就安装好了，但是分类文章显示不出来。<br>还需要:</p><ol><li>node 大于6.0(<pre><code>node -v #查看版本</code></pre></li><li>执行<pre><code>npm i hexo-generator-json-content --save</code></pre></li><li>_config.yml添加配置<pre><code>jsonContent:  meta: false  pages: false  posts:    title: true    date: true    path: true    text: false    raw: false    content: false    slug: false    updated: false    comments: false    link: false    permalink: false    excerpt: false    categories: false    tags: true</code></pre></li></ol><p>```</p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新建模板测试</title>
      <link href="/2019/06/05/%E6%96%B0%E5%BB%BA%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/06/05/%E6%96%B0%E5%BB%BA%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<pre class=" language-cs"><code class="language-cs">printf('string');</code></pre><p>dfsdfsdfsdf</p><p>sdfsd</p><p>###this is ok</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>theme-diaspora使用测试(页面中标准)</title>
      <link href="/2019/06/05/theme-diaspora%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/06/05/theme-diaspora%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>正文：balalala</p>]]></content>
      
      
      <categories>
          
          <category> 分类1 </category>
          
          <category> 分类2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo架设经验总结</title>
      <link href="/2019/06/04/hexo%E6%9E%B6%E8%AE%BE/"/>
      <url>/2019/06/04/hexo%E6%9E%B6%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<p>1.<br>下载安装2个文件(node.js与git)<br><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>安装后检查状态。<br>node -v<br>npm -v<br>git –version</p><p>1.2 配置SSH公钥： 使用下面的命令生成ssh公钥:</p><pre><code>ssh-keygen -t rsa -C &quot;imqiuge&quot;  //一路回车</code></pre><p>生成id_rsa和id_rsa.pub这两个文件，前者是密钥，后者是公钥，用记事本打开id_rsa.pub，复制其中的全部内容，添加到GitHub上 (我的是在C:\Users\Administrator.ssh)<br>到github的setting中的 SSH and GPG keys-&gt;New SSH key-&gt;粘贴key内容</p><p>SSH key添加之后，就可以在本机git bash中进行测试，输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>进行测试，<br>返回Hi username ！You’ve successfully ……说明你已经成功啦！</p><p>2.<br>在任意一个地方新建一个文件夹，在git bash中进入这个文件夹，比如cd /d/Files/hexo/（之后安装的内容会保存在这个文件夹内），输入npm install -g hexo安装hexo即可，如下图（我已经安装过了，就不再安装了）<br>npm install -g hexo<br>npm install hexo –save<br>hexo v #查看是否安装成功<br>hexo init</p><p>下载好了，再输入<br>hexo s #启动本地服务，默认4000端口</p><p>我们可以去看一下我们的源码的位置，就在之前新建的那个文件夹里，在source-&gt;_posts文件夹下，有一篇helloworld的初始化文章，如果想要添加新的文章，可以在命令行输入hexo new ‘filename’,就会生成一个新的.md文件，对它编辑就可以了。</p><p>3.3 上传项目</p><p>　　先打开配置文档_config.yml，对它做如下修改，repository后面的内容是 <a href="mailto:git@gitbub.com" target="_blank" rel="noopener">git@gitbub.com</a>:username/库地址 的形式</p><p>　　注意：type、repository、branch冒号的后面都有一个空格<br>deploy:<br>  type: git<br>  repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:imqiuge/imqiuge.github.io.git<br>  branch: master</p><p>部署好之后，我们就可以上传我们的代码咯</p><p>　　回到命令行窗口，输入npm install hexo-deployer-git –save,</p><p>hexo g #保存git<br>hexo d #上传git</p><p>安装主题：<br>$ git clone <a href="https://github.com/Fechin/hexo-theme-diaspora.git" target="_blank" rel="noopener">https://github.com/Fechin/hexo-theme-diaspora.git</a> diaspora<br>完成了把主题移到themes目录<br>再改_config.yml中的theme: diaspora (注意空格)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown用法</title>
      <link href="/2019/06/03/test/"/>
      <url>/2019/06/03/test/</url>
      
        <content type="html"><![CDATA[<p>代码高亮标签：</p><pre class=" language-excel"><code class="language-excel">| 1C                      | 1c                                                           ||-------------------------|--------------------------------------------------------------|| ABNF                    | abnf                                                         || Access logs             | accesslog                                                    || Ada                     | ada                                                          || ARM assembler           | armasm, arm                                                  || AVR assembler           | avrasm                                                       || ActionScript            | actionscript, as                                             || Apache                  | apache, apacheconf                                           || AppleScript             | applescript, osascript                                       || AsciiDoc                | asciidoc, adoc                                               || AspectJ                 | aspectj                                                      || AutoHotkey              | autohotkey                                                   || AutoIt                  | autoit                                                       || Awk                     | awk, mawk, nawk, gawk                                        || Axapta                  | axapta                                                       || Bash                    | bash, sh, zsh                                                || Basic                   | basic                                                        || BNF                     | bnf                                                          || Brainfuck               | brainfuck, bf                                                || C\#                     | cs, csharp                                                   || C\+\+                   | cpp, c, cc, h, c\+\+, h\+\+, hpp                             || C/AL                    | cal                                                          || Cache Object Script     | cos, cls                                                     || CMake                   | cmake, cmake\.in                                             || Coq                     | coq                                                          || CSP                     | csp                                                          || CSS                     | css                                                          || Cap’n Proto             | capnproto, capnp                                             || Clojure                 | clojure, clj                                                 || CoffeeScript            | coffeescript, coffee, cson, iced                             || Crmsh                   | crmsh, crm, pcmk                                             || Crystal                 | crystal, cr                                                  || D                       | d                                                            || DNS Zone file           | dns, zone, bind                                              || DOS                     | dos, bat, cmd                                                || Dart                    | dart                                                         || Delphi                  | delphi, dpr, dfm, pas, pascal, freepascal, lazarus, lpr, lfm || Diff                    | diff, patch                                                  || Django                  | django, jinja                                                || Dockerfile              | dockerfile, docker                                           || dsconfig                | dsconfig                                                     || DTS \(Device Tree\)     | dts                                                          || Dust                    | dust, dst                                                    || EBNF                    | ebnf                                                         || Elixir                  | elixir                                                       || Elm                     | elm                                                          || Erlang                  | erlang, erl                                                  || Excel                   | excel, xls, xlsx                                             || F\#                     | fsharp, fs                                                   || FIX                     | fix                                                          || Fortran                 | fortran, f90, f95                                            || G\-Code                 | gcode, nc                                                    || Gams                    | gams, gms                                                    || GAUSS                   | gauss, gss                                                   || Gherkin                 | gherkin                                                      || Go                      | go, golang                                                   || Golo                    | golo, gololang                                               || Gradle                  | gradle                                                       || Groovy                  | groovy                                                       || HTML, XML               | xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist            || HTTP                    | http, https                                                  || Haml                    | haml                                                         || Handlebars              | handlebars, hbs, html\.hbs, html\.handlebars                 || Haskell                 | haskell, hs                                                  || Haxe                    | haxe, hx                                                     || Hy                      | hy, hylang                                                   || Ini                     | ini                                                          || Inform7                 | inform7, i7                                                  || IRPF90                  | irpf90                                                       || JSON                    | json                                                         || Java                    | java, jsp                                                    || JavaScript              | javascript, js, jsx                                          || Leaf                    | leaf                                                         || Lasso                   | lasso, ls, lassoscript                                       || Less                    | less                                                         || LDIF                    | ldif                                                         || Lisp                    | lisp                                                         || LiveCode Server         | livecodeserver                                               || LiveScript              | livescript, ls                                               || Lua                     | lua                                                          || Makefile                | makefile, mk, mak                                            || Markdown                | markdown, md, mkdown, mkd                                    || Mathematica             | mathematica, mma                                             || Matlab                  | matlab                                                       || Maxima                  | maxima                                                       || Maya Embedded Language  | mel                                                          || Mercury                 | mercury                                                      || Mizar                   | mizar                                                        || Mojolicious             | mojolicious                                                  || Monkey                  | monkey                                                       || Moonscript              | moonscript, moon                                             || N1QL                    | n1ql                                                         || NSIS                    | nsis                                                         || Nginx                   | nginx, nginxconf                                             || Nimrod                  | nimrod, nim                                                  || Nix                     | nix                                                          || OCaml                   | ocaml, ml                                                    || Objective C             | objectivec, mm, objc, obj\-c                                 || OpenGL Shading Language | glsl                                                         || OpenSCAD                | openscad, scad                                               || Oracle Rules Language   | ruleslanguage                                                || Oxygene                 | oxygene                                                      || PF                      | pf, pf\.conf                                                 || PHP                     | php, php3, php4, php5, php6                                  || Parser3                 | parser3                                                      || Perl                    | perl, pl, pm                                                 || Pony                    | pony                                                         || PowerShell              | powershell, ps                                               || Processing              | processing                                                   || Prolog                  | prolog                                                       || Protocol Buffers        | protobuf                                                     || Puppet                  | puppet, pp                                                   || Python                  | python, py, gyp                                              || Python profiler results | profile                                                      || Q                       | k, kdb                                                       || QML                     | qml                                                          || R                       | r                                                            || RenderMan RIB           | rib                                                          || RenderMan RSL           | rsl                                                          || Roboconf                | graph, instances                                             || Ruby                    | ruby, rb, gemspec, podspec, thor, irb                        || Rust                    | rust, rs                                                     || SCSS                    | scss                                                         || SQL                     | sql                                                          || STEP Part 21            | p21, step, stp                                               || Scala                   | scala                                                        || Scheme                  | scheme                                                       || Scilab                  | scilab, sci                                                  || Shell                   | shell, console                                               || Smali                   | smali                                                        || Smalltalk               | smalltalk, st                                                || Stan                    | stan                                                         || Stata                   | stata                                                        || Stylus                  | stylus, styl                                                 || SubUnit                 | subunit                                                      || Swift                   | swift                                                        || Test Anything Protocol  | tap                                                          || Tcl                     | tcl, tk                                                      || TeX                     | tex                                                          || Thrift                  | thrift                                                       || TP                      | tp                                                           || Twig                    | twig, craftcms                                               || TypeScript              | typescript, ts                                               || VB\.Net                 | vbnet, vb                                                    || VBScript                | vbscript, vbs                                                || VHDL                    | vhdl                                                         || Vala                    | vala                                                         || Verilog                 | verilog, v                                                   || Vim Script              | vim                                                          || x86 Assembly            | x86asm                                                       || XL                      | xl, tao                                                      || XQuery                  | xpath, xq                                                    || Zephir                  | zephir, zep                                                  |</code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class=" language-excel"><code class="language-excel">办公桌        学工处    3办公椅        学工处    5皮椅        学工处    4文件柜        学工处    6监控电脑        学工处    5</code></pre><pre class=" language-cs"><code class="language-cs">        /// <summary>        /// 接口服务器发送的消息        /// </summary>        private void Receive()        {            try            {                while (true)                {                    byte[] buffer = new byte[2048];                    //实际接收到的字节数                    int r = socketSend.Receive(buffer);                    if (r == 0)                    {                        break;                    }                    else                    {                        //判断发送的数据的类型                        //表示发送的是文字消息                        //string str = Encoding.Default.GetString(buffer, 1, r - 1); //原写法，第二位参数的区别，第一个字符一直收不到，所以改成0再观察                        string str = Encoding.Default.GetString(buffer, 0, r - 1);                        this.txt_Log.Invoke(receiveCallBack, "接收远程服务器:" + socketSend.RemoteEndPoint + "发送的消息:" + str);                        List<string> striparr = str.Split(new string[] { "\r\n" }, StringSplitOptions.None).ToList();                        striparr = striparr.Where(s => !string.IsNullOrEmpty(s)).ToList();                        //GetMsgType(striparr);                        if (isCardMsg(striparr))                        {                            textBox1.Invoke(setCallBack, "收到刷卡信息...");                            string sReasonNo = striparr[1].Substring(10); //ReasonNo: 1标志                            string scardNO = striparr[2].Substring(4);//以下开始头默认带4个字符，处理掉                            string sConsumerNO = striparr[3].Substring(4);                            string sName = striparr[4].Substring(4);                            string sGroup = striparr[5].Substring(4);                            sGroup = CutGroup(sGroup);                            string sTime = striparr[6].Substring(4);                            string sLocal = striparr[7].Substring(4);                            string sInOrOut = striparr[8].Substring(4);                            string sStatus = striparr[9].Substring(4);                            label1.Text = "姓名：" + sName;                            label2.Text = "班级：" + sGroup;                            label3.Text = "日期：" + sTime;                            label4.Text = "状态：" + sStatus;                            string sPicPath = System.Environment.CurrentDirectory;  //显示图片                            sPicPath += @"\PIC\" + sName + ".jpg";                            //MessageBox.Show(sPicPath);                            if (System.IO.File.Exists(sPicPath))                                pictureBox1.Load(sPicPath);                            else                                pictureBox1.Image = null;                            string sNameSoundPath = System.Environment.CurrentDirectory;//语音播放姓名                            sNameSoundPath += @"\Sound\User\" + sName + ".wav";                            if (System.IO.File.Exists(sNameSoundPath))                            {                                System.Media.SoundPlayer player = new System.Media.SoundPlayer(sNameSoundPath);                                player.Play();//简单播放一遍                            }                        }                    }                }            }            catch (Exception ex)            {                MessageBox.Show("接收服务端发送的消息出错:" + ex.ToString());            }        }</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World22222222222222222</title>
      <link href="/2019/06/03/hello2/"/>
      <url>/2019/06/03/hello2/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
