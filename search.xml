<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一张图解析FastAdmin中的表格列表的功能</title>
      <link href="/2019/06/30/%E4%B8%80%E5%BC%A0%E5%9B%BE%E8%A7%A3%E6%9E%90FastAdmin%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E5%88%97%E8%A1%A8%E7%9A%84%E5%8A%9F%E8%83%BD/"/>
      <url>/2019/06/30/%E4%B8%80%E5%BC%A0%E5%9B%BE%E8%A7%A3%E6%9E%90FastAdmin%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E5%88%97%E8%A1%A8%E7%9A%84%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="一张图解析FastAdmin中的表格列表的功能"><a href="#一张图解析FastAdmin中的表格列表的功能" class="headerlink" title="一张图解析FastAdmin中的表格列表的功能"></a>一张图解析FastAdmin中的表格列表的功能</h1><p>发布于 2017-08-29</p><p><img src="https://cdn.forum.fastadmin.net/uploads/201809/15/a6309f467fcade6c47d226f2890ebe29" alt="https://cdn.forum.fastadmin.net/uploads/201809/15/a6309f467fcade6c47d226f2890ebe29"></p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>请根据图片上的数字索引查看对应功能说明。</p><p><strong>1.菜单名称和描述</strong><br>默认生成的CRUD是没有菜单名称和描述显示的，如果需要显示则可以修改<code>权限管理</code>-&gt;<code>菜单规则</code>，给对应菜单的添加上备注信息后即可显示，支持HTML</p><p><strong>2.TAB过滤选项卡</strong><br>在一键生成CRUD时，如果表中存在status字段且为ENUM类型，则会生成相应的TAB过滤选项卡，如果需要生成其它字段的过滤选项卡则可以在使用<code>php think crud</code>时使用<code>--headingfilterfield=你的字段名称</code>来指定字段</p><p><strong>3.通用搜索</strong><br>通用搜索的的内容是根据<code>bootstrap-table</code>配置的字段<code>columns</code>决定的，渲染的内容及格式由FastAdmin自动进行渲染，如果需要禁用或删除某一选项，可以在JS中配置<code>operate:false</code>来删除通用搜索中的选项。例如通常情况下我们的在JS中进行字段的配置如下：</p><pre class=" language-js"><code class="language-js"><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'createtime'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Create Time'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>这里默认是启用的通用搜索，针对通用搜索，有以下几个常用的配置：</p><pre><code>operate:&#39;=&#39; //用于查询时的操作符，默认为=，为false表示禁用此字段的通用搜索，支持!=、LIKE、NOT LIKE、&gt;、&lt;、&gt;=&lt;=、FIND_IN_SET、IN、NOT IN、BETWEEN、NOT BETWEEN、RANGE、NOT RANGE、NULL、NOT NULL、falsesearchList: //用于渲染列表的数据，支持的格式有JSON Array、JSON Object、$.getJSON、Functionaddclass: //用于给input或select添加额外的class属性type: //用于定义input文本框的类型,默认为textdata: //用于给input或select添加额外的属性</code></pre><p>常用配置示例如下：</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//时间区间搜索</span><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'createtime'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Createtime'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'RANGE'</span><span class="token punctuation">,</span> addclass<span class="token punctuation">:</span> <span class="token string">'datetimerange'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>datetime<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//金额区间搜索</span><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'money'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Money'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'RANGE'</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//下拉列表搜索</span><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'flag'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"hot"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag hot'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"recommend"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag recommend'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'FIND_IN_SET'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//动态下拉列表搜索</span><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'type'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Type'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">"ajax/dynamicselect"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//禁用通用搜索</span><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'keywords'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Keywords'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>如果我们需要完全自定义我们的通用搜索栏，我们可以在配置<code>bootstrap-table</code>时定义<code>searchFormTemplate</code>选项来完全重写我们的通用搜索栏，具体请参考<code>开发示例插件</code>中的自定义搜索示例</p><p><strong>4.工具栏按钮</strong><br>FastAdmin在一键CRUD时会自动生成添加、编辑、删除、导入、更多按钮的HTML，这些按钮会根据用户所拥有的权限控制基是否显示或隐藏。我们可以在控制器对应的<code>index.html</code>视图文件中任意修改或删除对应的按钮。请特别注意这几个自动生成的按钮都通过基拥有的<code>class</code>属性来绑定相关的事件，例如添加按钮拥有<code>btn-add</code>这个class、框架所已经占用的class如下：</p><pre><code>btn-add: 添加按钮使用btn-edit: 编辑按钮使用btn-del: 删除按钮使用btn-import: 导入按钮使用btn-more: 更多按钮使用btn-multi: 指操作使用btn-disabled: 添加此class后则只有在列表有选中数据时按钮才会变为可使用</code></pre><p>如果我们想点击<code>添加</code>按钮后默认全屏，则可以给添加按钮加上<code>data-area=&#39;[&quot;100%&quot;,&quot;100%&quot;]&#39;</code>即可默认全屏<br>如果我们想自定义按钮并添加事件，我们需要在视图中添加相应的HTML代码，然后在对应的JS文件中添加按钮的执行事件，切记不可在视图中直接编写JS或jQuery代码来绑定事件</p><p><strong>5.动态渲染统计信息</strong><br>很多时候我们需要在页面额外显示服务端传回的动态数据，此时我们只需要在<code>index.html</code>视图中添加</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>dodgerblue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-dollar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>extend<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        金额：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>money<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        单价：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>然后在控制器对应的JS中的index方法中添加以下的JS</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//当表格数据加载完成时</span>table<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'load-success.bs.table'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//这里可以获取从服务端获取的JSON数据</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//这里我们手动设置底部的值</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#money"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#price"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>注意务必将这段代码添加在<code>var table = $(&quot;#table&quot;);</code>之后<br>其中<code>data.extend.money</code>和<code>data.extend.price</code>就是我们在服务端动态返回的数据，如下</p><pre><code>$result = array(&quot;total&quot; =&gt; $total, &quot;rows&quot; =&gt; $list, &quot;extend&quot; =&gt; [&#39;money&#39; =&gt; 1024, &#39;price&#39; =&gt; 888]);return json($result);</code></pre><p>通过以上配置即可动态显示服务端返回的额外数据</p><p><strong>6.快速搜索</strong><br>快速搜索在键入关键词时将实时从服务端搜索数据，如果你的数据表数据较大，建议关闭此功能，关闭的方法是使用<code>search:false</code>，其次快速搜索默认只会搜索主键<code>id</code>这个字段，如果你需要搜索其它字段，则需要在服务端你的控制器中定义<code>$searchFields</code>这个值，如下</p><pre><code>protected $searchFields = &#39;id,name,title&#39;;</code></pre><p>这样在快速搜索时将会搜索<code>id,name,title</code>这三个字段。<br>如果需要修改默认文本框的<code>placeholder</code>，可以在表格初始化前定义</p><pre><code>$.fn.bootstrapTable.locales[Table.defaults.locale][&#39;formatSearch&#39;] = function(){return &quot;自定义placeholder文本&quot;;};</code></pre><p><strong>7.浏览模式、显示隐藏列、导出、通用搜索</strong><br>浏览模式可以切换卡片视图和表格视图两种模式，如果不需要此功能，可以设置<code>showToggle: false</code><br>显示隐藏列可以快速切换字段列的显示和隐藏，如果不需要此功能，可以设置<code>showColumns: false</code>，如果想要表格中的字段列默认隐藏可以设置字段属性<code>visible: false</code>即可默认隐藏<br>导出按钮默认将导出整个表的所有行，如果需要仅导出当前分页的数据，需要设置<code>exportDataType: &#39;basic&#39;</code>，如果想导出选中的行，则可以设置为<code>exportDataType: &#39;selected&#39;</code>，如果不需要此功能，可以设置<code>showExport: false</code><br>通用搜索指表格上方的搜索，通用搜索的表单默认是隐藏的，如果需要默认显示，需要设置<code>searchFormVisible: true</code>，如果不需要通用搜索功能，可以设置<code>commonSearch: false</code>。如果想要控制字段列不参考搜索则可以设置字段列属性为<code>operate: false</code>即可。</p><p><strong>8.字段配置</strong><br>默认字段的控制是根据控制器对应的JS来配置的，因此字段配置是通过JS，而在我们的视图<code>index.html</code>中是没有任何字段配置的，通常我们的配置如下：</p><pre class=" language-js"><code class="language-js">columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span>        <span class="token punctuation">{</span>checkbox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Id'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'admin_id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Admin_id'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'category.name'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'分类名称'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span>Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>search<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'category_id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Category_id'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> visible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'flag'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"hot"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag hot'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"recommend"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag recommend'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'FIND_IN_SET'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'genderdata'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Genderdata'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"male"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Genderdata male'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"female"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Genderdata female'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>normal<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'title'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Title'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'image'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Image'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>image<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Images'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>images<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'createtime'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Createtime'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'RANGE'</span><span class="token punctuation">,</span> addclass<span class="token punctuation">:</span> <span class="token string">'datetimerange'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>datetime<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'updatetime'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Updatetime'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'RANGE'</span><span class="token punctuation">,</span> addclass<span class="token punctuation">:</span> <span class="token string">'datetimerange'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>datetime<span class="token punctuation">,</span> visible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'weigh'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Weigh'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> visible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'switch'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Switch'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"1"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Yes'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'No'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>toggle<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'status'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Status'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"normal"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Normal'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"hidden"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Hidden'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>status<span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>字段配置的参数有</p><pre><code>checkbox:true, //是否为首列复选框field:&#39;name&#39; //字段名称,如果启用了关联查询这里可以使用别名,比如:category.name,请注意服务端返回的字段一一对应，如果使用了一个不存在的字段，将不会渲染任何数据title:&#39;名称&#39; //字段标题,显示于头部的标题operate:&#39;=&#39; //通用搜索的操作符,详见上方通用搜索介绍visible:false //字段是否可见，为false时将默认不可见formatter:Table.api.formatter.search //格式化显示的内容,FastAdmin内部定义了许多通用的格式化方法events: //定义元素响应的事件searchList: //定义通用搜索下拉列表的数据addclass: //通用搜索文本框或下拉列表的额外classtype: //通用搜索文本框的类型data: //通用搜索文本框或下拉列表的额外属性</code></pre><p>FastAdmin封装了许多常用的formatter方法，我们可以快速的调用即可。</p><pre class=" language-js"><code class="language-js"><span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.icon`</span></span> 快速将字段渲染成一个按钮，仅支持Fontawesome按钮<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.image`</span></span> 快速将字段渲染成图片展示的形式<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.images`</span></span> 快速将字段渲染成多图片展示的形式<span class="token punctuation">,</span>字段数据请以<span class="token template-string"><span class="token string">`,`</span></span>进行分隔<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.status`</span></span> 快速将字段渲染成状态，默认<span class="token template-string"><span class="token string">`normal/hidden/deleted/locked`</span></span>这四个状态<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.url`</span></span> 快速将字段渲染成URL框<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.search`</span></span> 快速将字段渲染成可搜索的链接，点击后将执行搜索<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.addtabs`</span></span> 快速将字段渲染成可添加到选项卡的链接，点击后将把链接添加到选项卡<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.flag`</span></span> 快速将字段渲染成标志，仅支持<span class="token template-string"><span class="token string">`index/hot/recommend/new`</span></span>这四种标志<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.label`</span></span> 快速将字段渲染Label标签<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.datetime`</span></span> 快速时间戳数据渲染成日期时间数据<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.operate`</span></span> 操作栏固定按钮<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.buttons`</span></span> 快速生成多个按钮<span class="token operator">></span> <span class="token template-string"><span class="token string">`Table.api.formatter.toggle`</span></span> 快速生成切换按钮</code></pre><p><strong>9.复选框</strong><br>如果我们需要不需要复选框则移除<code>{checkbox: true}</code>即可</p><p><strong>10.分类名称(关联搜索出分类表的名称)</strong><br>这里显示的分类名称是根据分类表关联查询出来的结果，如果我们启用关联查询，我们必须在当前控制器中设置属性<code>protected $relationSearch = true;</code>，同时我们的<code>index</code>方法也需要重写，请参考下方的完整代码中PHP部分。如果我们启用了关联查询，当两个表中的字段有冲突时，我们必须在字段中加上别名。请参考下方的完整代码中JS部分。</p><p><strong>11.标志</strong><br>我们可以使用<code>formatter:Table.api.formatter.flag</code>来渲染标志字段，默认会将数据库的值渲染以下几种颜色</p><pre class=" language-js"><code class="language-js"><span class="token punctuation">{</span>index<span class="token punctuation">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span> hot<span class="token punctuation">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span> recommend<span class="token punctuation">:</span> <span class="token string">'danger'</span><span class="token punctuation">,</span> <span class="token string">'new'</span><span class="token punctuation">:</span> <span class="token string">'info'</span><span class="token punctuation">}</span></code></pre><p>如果我们需要扩展额外的颜色，则可以使用</p><pre class=" language-js"><code class="language-js">custom<span class="token punctuation">:</span><span class="token punctuation">{</span>aaa<span class="token punctuation">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span> bbb<span class="token punctuation">:</span><span class="token string">'danger'</span><span class="token punctuation">}</span></code></pre><p>这样当值为<code>aaa</code>时会显示为蓝色，<code>bbb</code>时显示为红色</p><p><strong>12.图片和图片组</strong><br>我们可以使用</p><pre class=" language-js"><code class="language-js">formatter<span class="token punctuation">:</span>Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>imageformatter<span class="token punctuation">:</span>Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>images</code></pre><p>以上两种方式来渲染图片或图片组<br>请注意如果是图片组的情况下,数据值应该是以<code>,</code>进行分隔的</p><p><strong>13.开关</strong><br>我们可以使用<code>formatter:Table.api.formatter.toggle</code>来生成开关组件<br>默认情况下是根据数据库值1和0来表示开和关<br>我们可以通过额外的配置和定义开和关，比如</p><pre class=" language-js"><code class="language-js">yes<span class="token punctuation">:</span> <span class="token string">'open'</span><span class="token punctuation">,</span> no<span class="token punctuation">:</span> <span class="token string">'close'</span></code></pre><p>则此时会根据数据库值是<code>open</code>还是<code>close</code>来展示开关，<br>开关在点击的时候默认是只允许修改数据库的<code>status</code>字段的，如果我们开关不是<code>status</code>字段，我们需要在服务端对应的控制器中定义<code>protected $multiFields=&quot;id,name,swith&quot;;</code>，多个字段以<code>,</code>进行分隔</p><p><strong>14.状态渲染</strong><br>我们可以使用<code>formatter:Table.api.formatter.status</code>来渲染状态<br>默认根据以下值进行状态的颜色渲染</p><pre class=" language-js"><code class="language-js"><span class="token punctuation">{</span>normal<span class="token punctuation">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span> hidden<span class="token punctuation">:</span> <span class="token string">'gray'</span><span class="token punctuation">,</span> deleted<span class="token punctuation">:</span> <span class="token string">'danger'</span><span class="token punctuation">,</span> locked<span class="token punctuation">:</span> <span class="token string">'info'</span><span class="token punctuation">}</span></code></pre><p>如果我们状态有额外的值，我们可以使用custom来进行扩展显示的颜色，如下</p><pre class=" language-js"><code class="language-js">custom<span class="token punctuation">:</span> <span class="token punctuation">{</span>rejected<span class="token punctuation">:</span><span class="token string">'danger'</span><span class="token punctuation">,</span> agreed<span class="token punctuation">:</span><span class="token string">'success'</span><span class="token punctuation">}</span></code></pre><p>状态渲染显示的文本是根据<code>searchList</code>配置的值进行渲染的</p><p><strong>15.自定义按钮</strong><br>按钮组的功能是根据第8项中的<code>Table.api.formatter.buttons</code>进行生成的，代码如下</p><pre class=" language-js"><code class="language-js"> <span class="token punctuation">{</span>    field<span class="token punctuation">:</span> <span class="token string">'buttons'</span><span class="token punctuation">,</span>    width<span class="token punctuation">:</span> <span class="token string">"120px"</span><span class="token punctuation">,</span>    title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'按钮组'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    table<span class="token punctuation">:</span> table<span class="token punctuation">,</span>    events<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>events<span class="token punctuation">.</span>operate<span class="token punctuation">,</span>    buttons<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'detail'</span><span class="token punctuation">,</span>            text<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'弹出窗口打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'弹出窗口打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-primary btn-dialog'</span><span class="token punctuation">,</span>            icon<span class="token punctuation">:</span> <span class="token string">'fa fa-list'</span><span class="token punctuation">,</span>            url<span class="token punctuation">:</span> <span class="token string">'example/bootstraptable/detail'</span><span class="token punctuation">,</span>            callback<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"接收到回传数据："</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">"回传数据"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            visible<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//返回true时按钮显示,返回false隐藏</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'ajax'</span><span class="token punctuation">,</span>            text<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'发送Ajax'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'发送Ajax'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-success btn-magic btn-ajax'</span><span class="token punctuation">,</span>            icon<span class="token punctuation">:</span> <span class="token string">'fa fa-magic'</span><span class="token punctuation">,</span>            url<span class="token punctuation">:</span> <span class="token string">'example/bootstraptable/detail'</span><span class="token punctuation">,</span>            confirm<span class="token punctuation">:</span> <span class="token string">'确认发送'</span><span class="token punctuation">,</span>            success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>msg <span class="token operator">+</span> <span class="token string">",返回数据："</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//如果需要阻止成功提示，则必须使用return false;</span>                <span class="token comment" spellcheck="true">//return false;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            error<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>                Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'addtabs'</span><span class="token punctuation">,</span>            text<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'新选项卡中打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'新选项卡中打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-warning btn-addtabs'</span><span class="token punctuation">,</span>            icon<span class="token punctuation">:</span> <span class="token string">'fa fa-folder-o'</span><span class="token punctuation">,</span>            url<span class="token punctuation">:</span> <span class="token string">'example/bootstraptable/detail'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>buttons<span class="token punctuation">}</span></code></pre><p>按钮配置支持的参数有：</p><blockquote><p><code>name</code> 按钮唯一标识,其中<code>add/edit/del/dragsort</code>已经被占用,请勿使用。我们可以在HTML视图文件的<code>table</code>使用<code>data-buttons-标识</code>来控制显示<br><code>text</code> 按钮的文本内容,如果不需要显示文本可忽略<br><code>title</code> 鼠标移上去的标题或<code>弹窗/选项</code>显示的标题<br><code>icon</code> 按钮的图标,请使用<code>font-awesome</code>图标库<br><code>classname</code> 按钮的<code>class</code>, 其中<code>classname</code>中的<code>btn-dialog、btn-ajax、btn-addtabs、btn-click</code>，FastAdmin已经为这几个固定的Class注册了事件，所以可以直接使用，如果想要实现其它功能，需要自己手动编写代码绑定事件才可使用。<br><code>url</code> 按钮的链接/Ajax事件请求的URL/弹窗链接/选项卡链接，直接<code>function</code>和<code>string</code>类型,此链接会自动在链接后添加<code>ids/{ids}</code>,<code>{ids}</code>为当行主键ID，如果需要传递其它字段值，请在URL中使用<code>{字段名}</code>占位即可<br><code>refresh</code> 自动刷新,只针对<code>btn-ajax</code>事件<br><code>confirm</code> 确认框提示文字,配置后会在确认操作再执行对应的事件，只针对<code>btn-ajax/btn-dialog/btn-addtabs</code>事件<br><code>success</code> 事件成功的回调,只针对<code>btn-ajax</code>事件<br><code>error</code> 事件失败的回调,只针对<code>btn-ajax</code>事件<br><code>callback</code> 弹窗回传的回调,只针对<code>btn-dialog</code>事件,需要在对应打开的页面中使用<code>Fast.api.close(data);</code>进行回传数据<br><code>hidden</code> 是否隐藏按钮,按钮默认显示,支持<code>function</code>和<code>bool</code>类型<br><code>visible</code> 是否显示按钮,按钮默认显示,支持<code>function</code>和<code>bool</code>类型<br><code>click</code> 当<code>classname</code>包含<code>btn-click</code>时的点击回调事件<br><code>extend</code> 按钮扩展信息,可以任意定制按钮的参数,比如我们想在新窗口中打开链接，则配置<code>extend:&#39; target=&quot;_blank&quot;&#39;</code>即可</p></blockquote><p><strong>16.操作</strong><br>操作区域默认是<code>排序、编辑、删除</code>这三个按钮，此功能也是根据第8项中<code>Table.api.formatter.operate</code>来实现的。排序按钮只在表中存在<code>weigh</code>字段时才会出现，编辑按钮和删除按钮会根据管理员所拥有的权限进行按需显示。如果我们需要重写编辑(排序、删除)按钮的相关属性，则可以使用<code>buttons</code>来定义编辑(排序、删除)的相关属性。其次<code>Table.api.formatter.operate</code>也支持<code>buttons</code>属性来配置多个其它按钮，如示例图中的<code>详情</code>按钮。请参考下方完整代码中JS部分。</p><p><strong>17.分页信息</strong><br>分页信息显示的文字可以通过在表格初始化前定义</p><pre><code>$.fn.bootstrapTable.locales[Table.defaults.locale][&#39;formatSearch&#39;] = function (pageFrom, pageTo, totalRows) {    return &#39;显示第 &#39; + pageFrom + &#39; 到第 &#39; + pageTo + &#39; 条记录，总共 &#39; + totalRows + &#39; 条记录&#39;;};</code></pre><p>分页大小或分页大小选项可以在表格初始化时传入以下参数进行配置</p><pre><code>pageSize: 10,pageList: [10, 25, 50, &#39;All&#39;],</code></pre><p><strong>18.翻页信息</strong><br>翻页信息会根据服务端返回的数据行数自动进行渲染，如果返回的行数不满足分页条件时，此项是不会显示的</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>PHP代码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>admin<span class="token punctuation">\</span>controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">app<span class="token punctuation">\</span>common<span class="token punctuation">\</span>controller<span class="token punctuation">\</span>Backend</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 测试管理 * * @icon fa fa-circle-o * @remark 此列表是通过php think crud -t test一键生成的针对数据表的查看、添加、编辑、删除、批量修改等功能，只需在设计表时符合FastAdmin相关字段名称、备注要求，即可生成相关的表单组件 */</span><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Backend</span><span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$relationSearch</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">_initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">_initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">model</span> <span class="token operator">=</span> <span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'Test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 查看     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">isAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">list</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">,</span> <span class="token variable">$sort</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">,</span> <span class="token variable">$offset</span><span class="token punctuation">,</span> <span class="token variable">$limit</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">buildparams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$total</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">model</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string">"category"</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">order</span><span class="token punctuation">(</span><span class="token variable">$sort</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">model</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string">"category"</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">order</span><span class="token punctuation">(</span><span class="token variable">$sort</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token variable">$offset</span><span class="token punctuation">,</span> <span class="token variable">$limit</span><span class="token punctuation">)</span>                    <span class="token operator">-</span><span class="token operator">></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"total"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$total</span><span class="token punctuation">,</span> <span class="token string">"rows"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token string">"extend"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token string">'money'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">'price'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">888</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">view</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>JS代码：</p><pre class=" language-js"><code class="language-js"><span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'jquery'</span><span class="token punctuation">,</span> <span class="token string">'bootstrap'</span><span class="token punctuation">,</span> <span class="token string">'backend'</span><span class="token punctuation">,</span> <span class="token string">'table'</span><span class="token punctuation">,</span> <span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> Backend<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Form<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Controller <span class="token operator">=</span> <span class="token punctuation">{</span>        index<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 初始化表格参数配置</span>            Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                extend<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    index_url<span class="token punctuation">:</span> <span class="token string">'test/index'</span><span class="token punctuation">,</span>                    add_url<span class="token punctuation">:</span> <span class="token string">'test/add'</span><span class="token punctuation">,</span>                    edit_url<span class="token punctuation">:</span> <span class="token string">'test/edit'</span><span class="token punctuation">,</span>                    del_url<span class="token punctuation">:</span> <span class="token string">'test/del'</span><span class="token punctuation">,</span>                    multi_url<span class="token punctuation">:</span> <span class="token string">'test/multi'</span><span class="token punctuation">,</span>                    table<span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> table <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#table"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//当表格数据加载完成时</span>            table<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'load-success.bs.table'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//这里可以获取从服务端获取的JSON数据</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//这里我们手动设置底部的值</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#money"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#price"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 初始化表格</span>            table<span class="token punctuation">.</span><span class="token function">bootstrapTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                url<span class="token punctuation">:</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>bootstrapTable<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>index_url<span class="token punctuation">,</span>                pk<span class="token punctuation">:</span> <span class="token string">'id'</span><span class="token punctuation">,</span>                sortName<span class="token punctuation">:</span> <span class="token string">'weigh'</span><span class="token punctuation">,</span>                columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">[</span>                        <span class="token punctuation">{</span>checkbox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Id'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'admin_id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Admin_id'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'category.name'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'分类名称'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span>Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>search<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'category_id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Category_id'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> visible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'flag'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"hot"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag hot'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"recommend"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Flag recommend'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'FIND_IN_SET'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'genderdata'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Genderdata'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"male"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Genderdata male'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"female"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Genderdata female'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>normal<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'title'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Title'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'image'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Image'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>image<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Images'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>images<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'createtime'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Createtime'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'RANGE'</span><span class="token punctuation">,</span> addclass<span class="token punctuation">:</span> <span class="token string">'datetimerange'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>datetime<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'updatetime'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Updatetime'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token string">'RANGE'</span><span class="token punctuation">,</span> addclass<span class="token punctuation">:</span> <span class="token string">'datetimerange'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>datetime<span class="token punctuation">,</span> visible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'weigh'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Weigh'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> visible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'switch'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Switch'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"1"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Yes'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'No'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>toggle<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'status'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Status'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> searchList<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"normal"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Normal'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"hidden"</span><span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Hidden'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>status<span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            field<span class="token punctuation">:</span> <span class="token string">'buttons'</span><span class="token punctuation">,</span>                            width<span class="token punctuation">:</span> <span class="token string">"120px"</span><span class="token punctuation">,</span>                            title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'按钮组'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            table<span class="token punctuation">:</span> table<span class="token punctuation">,</span>                            events<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>events<span class="token punctuation">.</span>operate<span class="token punctuation">,</span>                            buttons<span class="token punctuation">:</span> <span class="token punctuation">[</span>                                <span class="token punctuation">{</span>                                    name<span class="token punctuation">:</span> <span class="token string">'detail'</span><span class="token punctuation">,</span>                                    text<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'弹出窗口打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'弹出窗口打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-primary btn-dialog'</span><span class="token punctuation">,</span>                                    icon<span class="token punctuation">:</span> <span class="token string">'fa fa-list'</span><span class="token punctuation">,</span>                                    url<span class="token punctuation">:</span> <span class="token string">'example/bootstraptable/detail'</span><span class="token punctuation">,</span>                                    callback<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"接收到回传数据："</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">"回传数据"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                                    visible<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        <span class="token comment" spellcheck="true">//返回true时按钮显示,返回false隐藏</span>                                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">,</span>                                <span class="token punctuation">{</span>                                    name<span class="token punctuation">:</span> <span class="token string">'ajax'</span><span class="token punctuation">,</span>                                    text<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'发送Ajax'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'发送Ajax'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-success btn-magic btn-ajax'</span><span class="token punctuation">,</span>                                    icon<span class="token punctuation">:</span> <span class="token string">'fa fa-magic'</span><span class="token punctuation">,</span>                                    url<span class="token punctuation">:</span> <span class="token string">'example/bootstraptable/detail'</span><span class="token punctuation">,</span>                                    confirm<span class="token punctuation">:</span> <span class="token string">'确认发送'</span><span class="token punctuation">,</span>                                    success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>msg <span class="token operator">+</span> <span class="token string">",返回数据："</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token comment" spellcheck="true">//如果需要阻止成功提示，则必须使用return false;</span>                                        <span class="token comment" spellcheck="true">//return false;</span>                                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                                    error<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>                                        Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">,</span>                                <span class="token punctuation">{</span>                                    name<span class="token punctuation">:</span> <span class="token string">'addtabs'</span><span class="token punctuation">,</span>                                    text<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'新选项卡中打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'新选项卡中打开'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-warning btn-addtabs'</span><span class="token punctuation">,</span>                                    icon<span class="token punctuation">:</span> <span class="token string">'fa fa-folder-o'</span><span class="token punctuation">,</span>                                    url<span class="token punctuation">:</span> <span class="token string">'example/bootstraptable/detail'</span>                                <span class="token punctuation">}</span>                            <span class="token punctuation">]</span><span class="token punctuation">,</span>                            formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>buttons                        <span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span>                            field<span class="token punctuation">:</span> <span class="token string">'operate'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'Operate'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> table<span class="token punctuation">:</span> table<span class="token punctuation">,</span> events<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>events<span class="token punctuation">.</span>operate<span class="token punctuation">,</span>                            buttons<span class="token punctuation">:</span> <span class="token punctuation">[</span>                                <span class="token punctuation">{</span>                                    name<span class="token punctuation">:</span> <span class="token string">'detail'</span><span class="token punctuation">,</span>                                    title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'详情'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    classname<span class="token punctuation">:</span> <span class="token string">'btn btn-xs btn-primary btn-dialog'</span><span class="token punctuation">,</span>                                    icon<span class="token punctuation">:</span> <span class="token string">'fa fa-list'</span><span class="token punctuation">,</span>                                    url<span class="token punctuation">:</span> <span class="token string">'test/detail'</span><span class="token punctuation">,</span>                                    callback<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        Layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"接收到回传数据："</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">"回传数据"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            formatter<span class="token punctuation">:</span> Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>operate                        <span class="token punctuation">}</span>                    <span class="token punctuation">]</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 绑定TAB事件</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.panel-heading a[data-toggle="tab"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'shown.bs.tab'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> field <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">closest</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"field"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> options <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">bootstrapTable</span><span class="token punctuation">(</span><span class="token string">'getOptions'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                options<span class="token punctuation">.</span>pageNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                options<span class="token punctuation">.</span>queryParams <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> filter <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        filter<span class="token punctuation">[</span>field<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    params<span class="token punctuation">.</span>filter <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> params<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                table<span class="token punctuation">.</span><span class="token function">bootstrapTable</span><span class="token punctuation">(</span><span class="token string">'refresh'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 为表格绑定事件</span>            Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">bindevent</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        add<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Controller<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">bindevent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        edit<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Controller<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">bindevent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        api<span class="token punctuation">:</span> <span class="token punctuation">{</span>            bindevent<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Form<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">bindevent</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"form[role=form]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Controller<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>HTML代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel panel-default panel-intro<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {:build_heading(null,FALSE)}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav nav-tabs<span class="token punctuation">"</span></span> <span class="token attr-name">data-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>status<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#t-all<span class="token punctuation">"</span></span> <span class="token attr-name">data-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{:__('All')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            {foreach name="statusList" item="vo"}            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#t-{$key}<span class="token punctuation">"</span></span> <span class="token attr-name">data-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{$key}<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{$vo}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            {/foreach}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myTabContent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab-pane fade active in<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>widget-body no-padding<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toolbar<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toolbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary btn-refresh<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:__(<span class="token punctuation">'</span>Refresh<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-refresh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-success btn-add {:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/add<span class="token punctuation">'</span>)?<span class="token punctuation">'</span><span class="token punctuation">'</span>:<span class="token punctuation">'</span>hide<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:__(<span class="token punctuation">'</span>Add<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('Add')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-success btn-edit btn-disabled disabled {:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/edit<span class="token punctuation">'</span>)?<span class="token punctuation">'</span><span class="token punctuation">'</span>:<span class="token punctuation">'</span>hide<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:__(<span class="token punctuation">'</span>Edit<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-pencil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('Edit')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-danger btn-del btn-disabled disabled {:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/del<span class="token punctuation">'</span>)?<span class="token punctuation">'</span><span class="token punctuation">'</span>:<span class="token punctuation">'</span>hide<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:__(<span class="token punctuation">'</span>Delete<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-trash<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('Delete')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-danger btn-import {:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/import<span class="token punctuation">'</span>)?<span class="token punctuation">'</span><span class="token punctuation">'</span>:<span class="token punctuation">'</span>hide<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:__(<span class="token punctuation">'</span>Import<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-import-file<span class="token punctuation">"</span></span> <span class="token attr-name">data-url</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajax/upload<span class="token punctuation">"</span></span> <span class="token attr-name">data-mimetype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>csv,xls,xlsx<span class="token punctuation">"</span></span> <span class="token attr-name">data-multiple</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('Import')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dropdown btn-group {:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/multi<span class="token punctuation">'</span>)?<span class="token punctuation">'</span><span class="token punctuation">'</span>:<span class="token punctuation">'</span>hide<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary btn-more dropdown-toggle btn-disabled disabled<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dropdown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-cog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('More')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dropdown-menu text-left<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-multi btn-disabled disabled<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">data-params</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>status<span class="token punctuation">=</span>normal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-eye<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('Set to normal')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-multi btn-disabled disabled<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">data-params</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>status<span class="token punctuation">=</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-eye-slash<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> {:__('Set to hidden')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-info btn-disabled disabled btn-selected<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-leaf<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 获取选中项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-success btn-singlesearch<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 自定义搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-success btn-change btn-start<span class="token punctuation">"</span></span> <span class="token attr-name">data-params</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>action<span class="token punctuation">=</span>start<span class="token punctuation">"</span></span> <span class="token attr-name">data-url</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example/bootstraptable/start<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-play<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 启动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-danger btn-change btn-pause<span class="token punctuation">"</span></span> <span class="token attr-name">data-params</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>action<span class="token punctuation">=</span>pause<span class="token punctuation">"</span></span> <span class="token attr-name">data-url</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example/bootstraptable/pause<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-pause<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 暂停<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>dodgerblue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-dollar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>extend<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                金额：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>money<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                                单价：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table table-striped table-bordered table-hover table-nowrap<span class="token punctuation">"</span></span>                           <span class="token attr-name">data-operate-edit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/edit<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span>                            <span class="token attr-name">data-operate-del</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{:$auth-<span class="token punctuation">></span>check(<span class="token punctuation">'</span>test/del<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span>                            <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> FastAdmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAdmin使用总结</title>
      <link href="/2019/06/27/FastAdmin%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2019/06/27/FastAdmin%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h4 id="快速搜索"><a href="#快速搜索" class="headerlink" title="快速搜索"></a>快速搜索</h4><pre class=" language-php"><code class="language-php">只需在控制器中定义搜索的字段<span class="token keyword">protected</span> <span class="token variable">$searchFields</span> <span class="token operator">=</span> <span class="token string">'XM'</span><span class="token punctuation">;</span></code></pre><h4 id="添加菜单头"><a href="#添加菜单头" class="headerlink" title="添加菜单头"></a>添加菜单头</h4><pre class=" language-js"><code class="language-js"><span class="token punctuation">{</span><span class="token punctuation">:</span><span class="token function">build_toolbar</span><span class="token punctuation">(</span><span class="token string">'refresh,add,edit,del,import'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">:</span><span class="token function">build_heading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>菜单上方的导入 及搜索操作应该在这个代码里面</code></pre><hr><h4 id="导入问题解决办法："><a href="#导入问题解决办法：" class="headerlink" title="导入问题解决办法："></a>导入问题解决办法：</h4><h5 id="1-控制器中继承import方法"><a href="#1-控制器中继承import方法" class="headerlink" title="1.控制器中继承import方法"></a>1.控制器中继承import方法</h5><p>application\admin\controller\recruit\Schools.php</p><pre class=" language-php"><code class="language-php">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">import</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><ol start="2"><li><h5 id="在模块对应的JS中添加import-url"><a href="#在模块对应的JS中添加import-url" class="headerlink" title="在模块对应的JS中添加import_url"></a>在模块对应的JS中添加import_url</h5><p>如下路径：\public\assets\js\backend\recruit\student.js</p><pre class=" language-js"><code class="language-js">    Table<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        extend<span class="token punctuation">:</span> <span class="token punctuation">{</span>            index_url<span class="token punctuation">:</span> <span class="token string">'recruit/student/index'</span> <span class="token operator">+</span> location<span class="token punctuation">.</span>search<span class="token punctuation">,</span>            add_url<span class="token punctuation">:</span> <span class="token string">'recruit/student/add'</span><span class="token punctuation">,</span>            edit_url<span class="token punctuation">:</span> <span class="token string">'recruit/student/edit'</span><span class="token punctuation">,</span>            del_url<span class="token punctuation">:</span> <span class="token string">'recruit/student/del'</span><span class="token punctuation">,</span>     import_url<span class="token punctuation">:</span> <span class="token string">'recruit/student/import'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//只添加了这部分</span>            multi_url<span class="token punctuation">:</span> <span class="token string">'recruit/student/multi'</span><span class="token punctuation">,</span>            table<span class="token punctuation">:</span> <span class="token string">'recruit_student'</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ol><h5 id="3-不可直接用导出的模板，需要保存下，另外id字段不可以加入"><a href="#3-不可直接用导出的模板，需要保存下，另外id字段不可以加入" class="headerlink" title="3.不可直接用导出的模板，需要保存下，另外id字段不可以加入"></a>3.不可直接用导出的模板，需要保存下，另外id字段不可以加入</h5><blockquote><p>温馨提示：上传只支持xls、xlsx、csv三种格式的数据，第一行数据为数据表字段注释，因此请务必为你的数据表添加好注释。</p></blockquote><hr><p>设置只读字段，保护数据不能修改，</p><p>经测试有效，添加不影响，编辑提示成功，但是不会改动。</p><p>在模型中定义：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token variable">$readonly</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'XM'</span><span class="token punctuation">,</span> <span class="token string">'MZ'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//数据库</span><span class="token punctuation">}</span></code></pre><hr><h4 id="关联模型的CRUD生成命令（2个数据库绑定）"><a href="#关联模型的CRUD生成命令（2个数据库绑定）" class="headerlink" title="关联模型的CRUD生成命令（2个数据库绑定）"></a>关联模型的CRUD生成命令（2个数据库绑定）</h4><pre class=" language-shell"><code class="language-shell">php think crud -t test10 -r category -k category_1 -p id//解释： test10 中的category字段与category_1表绑定，category_1的主键为id</code></pre><hr><h4 id="列表上的tab键怎么生成"><a href="#列表上的tab键怎么生成" class="headerlink" title="列表上的tab键怎么生成?"></a>列表上的tab键怎么生成?</h4><p>方法1：<br>可以自已添加修改的。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav nav-tabs<span class="token punctuation">"</span></span> <span class="token attr-name">data-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>需要展现的字段名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#t-all<span class="token punctuation">"</span></span> <span class="token attr-name">data-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{:__('All')}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            {foreach name="后台传过来的数组list" item="vo"}            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#t-{$key}<span class="token punctuation">"</span></span> <span class="token attr-name">data-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{$key}<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{$vo}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            {/foreach}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>可以参考test生成的index.html</p><p>注意要和table的字段一致</p><p>方法2：</p><p>数据库字段，及类型，生成的效果，建议收费状态加上这个字段</p><pre><code>status状态:0=隐藏,1=正常,2=推荐enum(‘0’,’1’,’2’)</code></pre><p>将生成多个语言包和单选下拉列表,同时生成TAB选项卡,且列表中的值显示为对应的文字##</p><hr><p>后台会员增加会员添加功能，添加到数据库的密码是明码，怎么处理可以给密码加密？<br>密码规则是</p><pre class=" language-php"><code class="language-php"><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token operator">+</span>salt<span class="token punctuation">)</span></code></pre><hr><p>如何在会员管理里面设置一个添加<br><a href="https://ask.fastadmin.net/question/1606.html" target="_blank" rel="noopener">https://ask.fastadmin.net/question/1606.html</a></p><hr><h2 id="php-think-crud的命令非常好用，用于一键生成该功能的全部代码。"><a href="#php-think-crud的命令非常好用，用于一键生成该功能的全部代码。" class="headerlink" title="php think crud的命令非常好用，用于一键生成该功能的全部代码。"></a>php think crud的命令非常好用，用于一键生成该功能的全部代码。</h2><h5 id="步骤1："><a href="#步骤1：" class="headerlink" title="步骤1："></a>步骤1：</h5><p>1.1新建数据库fa_test10 (备注写清楚，文件以名称为标准，菜单信息以备注为准)<br>1.2设计表，按需添加，还是要备注清楚！</p><h5 id="步骤2-生成文件-："><a href="#步骤2-生成文件-：" class="headerlink" title="步骤2(生成文件)："></a>步骤2(生成文件)：</h5><p>//生成fa_test表的CRUD<br>在根目录执行（think文件目录，记的把php加到环境变量）：</p><pre class=" language-php"><code class="language-php">php think crud <span class="token operator">-</span>t test10      <span class="token shell-comment comment">#作用：生成全部文件。</span>或php think crud <span class="token operator">-</span>t test10 <span class="token operator">-</span>c money<span class="token operator">/</span>test10 <span class="token shell-comment comment">#同上一样作用，只是生成在money目录里</span>php think crud <span class="token operator">-</span>t test10 <span class="token operator">-</span>u <span class="token number">1</span> <span class="token comment" spellcheck="true">//添加并同时生成菜单</span>php think crud <span class="token operator">-</span>t test10 <span class="token operator">--</span>force<span class="token operator">=</span><span class="token boolean">true</span> <span class="token comment" spellcheck="true">//强制重新生成</span></code></pre><h5 id="步骤3-生成菜单-："><a href="#步骤3-生成菜单-：" class="headerlink" title="步骤3(生成菜单)："></a>步骤3(生成菜单)：</h5><pre class=" language-php"><code class="language-php">php think menu <span class="token operator">-</span>c test10 <span class="token shell-comment comment">#生成菜单</span>php think menu <span class="token operator">-</span>c money2\<span class="token package">test10</span> <span class="token shell-comment comment">#同步骤2对应的路径，相应的money2后的二级目录</span>以上代码要反操作删除的话最后 <span class="token operator">-</span>d <span class="token number">1</span> 即可<span class="token comment" spellcheck="true">//生成fa_test表的CRUD</span>php think crud <span class="token operator">-</span>t test<span class="token comment" spellcheck="true">//生成fa_test表的CRUD且一键生成菜单</span>php think crud <span class="token operator">-</span>t test <span class="token operator">-</span>u <span class="token number">1</span><span class="token comment" spellcheck="true">//删除fa_test表生成的CRUD</span>php think crud <span class="token operator">-</span>t test <span class="token operator">-</span>d <span class="token number">1</span><span class="token comment" spellcheck="true">//生成fa_test表的CRUD且控制器生成在二级目录下</span>php think crud <span class="token operator">-</span>t test <span class="token operator">-</span>c mydir<span class="token operator">/</span>test<span class="token comment" spellcheck="true">//生成fa_test_log表的CRUD且生成对应的控制器为testlog</span>php think crud <span class="token operator">-</span>t test_log <span class="token operator">-</span>c testlog<span class="token comment" spellcheck="true">//生成fa_test表的CRUD且对应的模型名为testmodel</span>php think crud <span class="token operator">-</span>t test <span class="token operator">-</span>m testmodel<span class="token comment" spellcheck="true">//生成fa_test表的CRUD且生成关联模型category，外链为category_id，关联表主键为id</span>php think crud <span class="token operator">-</span>t test <span class="token operator">-</span>r category <span class="token operator">-</span>k category_id <span class="token operator">-</span>p id<span class="token comment" spellcheck="true">//生成fa_test表的CRUD且所有以list或data结尾的字段都生成复选框</span>php think crud <span class="token operator">-</span>t test <span class="token operator">--</span>setcheckboxsuffix<span class="token operator">=</span>list <span class="token operator">--</span>setcheckboxsuffix<span class="token operator">=</span>data<span class="token comment" spellcheck="true">//生成fa_test表的CRUD且所有以image和img结尾的字段都生成图片上传组件</span>php think crud <span class="token operator">-</span>t test <span class="token operator">--</span>imagefield<span class="token operator">=</span>image <span class="token operator">--</span>imagefield<span class="token operator">=</span>img<span class="token comment" spellcheck="true">//关联多个表,参数传递时请按顺序依次传递，支持以下几个参数relation/relationmodel/relationforeignkey/relationprimarykey/relationfields/relationmode</span>php think crud <span class="token operator">-</span>t test <span class="token operator">--</span>relation<span class="token operator">=</span>category <span class="token operator">--</span>relation<span class="token operator">=</span>admin <span class="token operator">--</span>relationforeignkey<span class="token operator">=</span>category_id <span class="token operator">--</span>relationforeignkey<span class="token operator">=</span>admin_id<span class="token comment" spellcheck="true">//生成v_phealth_db2数据库下的fa_test表的CRUD</span>php think crud <span class="token operator">-</span>t test <span class="token operator">--</span>db<span class="token operator">=</span>v_phealth_db2</code></pre><h2 id="删除控制器及菜单"><a href="#删除控制器及菜单" class="headerlink" title="删除控制器及菜单"></a>删除控制器及菜单</h2><pre class=" language-shell"><code class="language-shell">//一键生成test控制器的权限菜单php think menu -c test//一键生成mydir/test控制器的权限菜单php think menu -c mydir/test//删除test控制器生成的菜单php think menu -c test -d 1//一键全部重新所有控制器的权限菜单php think menu -c all-controller</code></pre><p><a href="https://doc.fastadmin.net/docs/command.html#准备工作-10" target="_blank" rel="noopener">https://doc.fastadmin.net/docs/command.html#准备工作-10</a></p><hr><p>{:build_heading()}菜单上方的导入 及搜索操作应该在这个代码里面</p><hr><p>含有此字段生成CRUD的时候会带【回收站】<br>名：deletetime<br>类型：int<br>长度：10</p><p>注释：删除时间    </p><hr><p>用户信息、用户名、ID、昵称等：</p><pre class=" language-php"><code class="language-php"><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"用户ID:"</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">auth</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"用户昵称:"</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">auth</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">auth</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token comment" spellcheck="true">//加密后的密码字符</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">auth</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token comment" spellcheck="true">//用户名</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">auth</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">paemail</span>        <span class="token comment" spellcheck="true">//邮箱</span></code></pre><hr><p>删除菜单侧栏下面相关链接文件位于：<br>application\admin\view\common\menu.html文件下面的4行<br>以下4行可以删除或改成自己的链接,但建议你在你的网站上添加一个FastAdmin的链接</p><hr><p>字段<br>createtime    创建时间    int    记录添加时间字段,不需要手动维护<br>updatetime    更新时间    int    记录更新时间的字段,不需要手动维护</p><p>deletetime    删除时间    int    记录删除时间的字段,不需要手动维护,如果存在此字段将会生成回收站功能,字段默认值务必为null</p><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><p>以下为fa_test2字段，复制自fa_test字段，字段类型、注释处的文本会自动生成相应的控件</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* Navicat Premium Data Transfer Source Server         : phpstudy sql Source Server Type    : MySQL Source Server Version : 50553 Source Host           : localhost:3306 Source Schema         : fastadmin Target Server Type    : MySQL Target Server Version : 50553 File Encoding         : 65001 Date: 27/06/2019 23:57:51*/</span><span class="token keyword">SET</span> NAMES utf8mb4<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for fa_test2</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>fa_test2<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>fa_test2<span class="token punctuation">`</span>  <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'ID'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>admin_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'管理员ID'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>week<span class="token punctuation">`</span> <span class="token keyword">enum</span><span class="token punctuation">(</span><span class="token string">'monday'</span><span class="token punctuation">,</span><span class="token string">'tuesday'</span><span class="token punctuation">,</span><span class="token string">'wednesday'</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'星期(单选):monday=星期一,tuesday=星期二,wednesday=星期三'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>flag<span class="token punctuation">`</span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'hot'</span><span class="token punctuation">,</span><span class="token string">'index'</span><span class="token punctuation">,</span><span class="token string">'recommend'</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'标志(多选):hot=热门,index=首页,recommend=推荐'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>genderdata<span class="token punctuation">`</span> <span class="token keyword">enum</span><span class="token punctuation">(</span><span class="token string">'male'</span><span class="token punctuation">,</span><span class="token string">'female'</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'male'</span> <span class="token keyword">COMMENT</span> <span class="token string">'性别(单选):male=男,female=女'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>hobbydata<span class="token punctuation">`</span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'music'</span><span class="token punctuation">,</span><span class="token string">'reading'</span><span class="token punctuation">,</span><span class="token string">'swimming'</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'爱好(多选):music=音乐,reading=读书,swimming=游泳'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>title<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'标题'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>content<span class="token punctuation">`</span> <span class="token keyword">text</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'内容'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>image<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'图片'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>images<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'图片组'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>attachfile<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'附件'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>keywords<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'关键字'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>description<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'描述'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>city<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'省市'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>json<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'配置:key=名称,value=值'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>price<span class="token punctuation">`</span> <span class="token keyword">float</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0.00</span> <span class="token keyword">COMMENT</span> <span class="token string">'价格'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>views<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'点击'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>startdate<span class="token punctuation">`</span> <span class="token keyword">date</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'开始日期'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>activitytime<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'活动时间(datetime)'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>year<span class="token punctuation">`</span> year<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'年'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>times<span class="token punctuation">`</span> time <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>refreshtime<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'刷新时间(int)'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>createtime<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>updatetime<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>deletetime<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'删除时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>weigh<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'权重'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>switch<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'开关'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span><span class="token keyword">status</span><span class="token punctuation">`</span> <span class="token keyword">enum</span><span class="token punctuation">(</span><span class="token string">'normal'</span><span class="token punctuation">,</span><span class="token string">'hidden'</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'normal'</span> <span class="token keyword">COMMENT</span> <span class="token string">'状态'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>state<span class="token punctuation">`</span> <span class="token keyword">enum</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'1'</span> <span class="token keyword">COMMENT</span> <span class="token string">'状态值:0=禁用,1=正常,2=推荐'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">6</span> <span class="token keyword">CHARACTER SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci <span class="token keyword">COMMENT</span> <span class="token operator">=</span> <span class="token string">'测试表'</span> ROW_FORMAT <span class="token operator">=</span> Compact<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre><hr><h2 id="模糊搜索的方法"><a href="#模糊搜索的方法" class="headerlink" title="模糊搜索的方法"></a>模糊搜索的方法</h2><p>(每次重新生成crud修改就会恢复回去)：</p><p>目前只发现改js文件，对应的路径为：<br>\public\assets\js\backend\schools.js (schools.js与control同名)<br>初始化表格部分把原：<br>{field: ‘NAME’, title: __(‘Name’)｝，<br>再加一行修改为<br>{field: ‘NAME’, title: __(‘Name’),</p><p>​                    operate: ‘LIKE %…%’},</p><hr><h2 id="TABLE上增加序号栏"><a href="#TABLE上增加序号栏" class="headerlink" title="TABLE上增加序号栏"></a>TABLE上增加序号栏</h2><p>，通过修改JS文件实现。<br>\public\assets\js\backend\schools.js (schools.js与control同名)</p><pre class=" language-php"><code class="language-php"><span class="token punctuation">{</span>checkbox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//以下文件直接复制即可使用</span><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'id'</span><span class="token punctuation">,</span>title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'序号'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span>row<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><hr><h2 id="实现分页序号连续。"><a href="#实现分页序号连续。" class="headerlink" title="实现分页序号连续。"></a>实现分页序号连续。</h2><pre class=" language-php"><code class="language-php"><span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'序号'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> options <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">bootstrapTable</span><span class="token punctuation">(</span><span class="token string">'getOptions'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> pageNumber <span class="token operator">=</span> options<span class="token punctuation">.</span>pageNumber<span class="token punctuation">;</span>    <span class="token keyword">var</span> pageSize <span class="token operator">=</span> options<span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>pageNumber <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> index<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> operate<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><hr><p>可以参考自带的例子，以及表 字段的写法，注意注释部分。</p><p>FastAdmin自带一个fa_test表用于测试CRUD能支持的字段名称和类型，请直接使用php think crud -t test生成查看</p><hr><h2 id="关闭登陆验证码"><a href="#关闭登陆验证码" class="headerlink" title="关闭登陆验证码"></a>关闭登陆验证码</h2><blockquote><p>打开application/config.php在文件 login_captcha的配置为false即可</p><p>输入框要禁用，在模板文件里改readonly=”true”</p></blockquote><p>controller编写非常重要的：<br>php文件首字母需要大写,如果Okokok.php</p><hr><h2 id="提示你所浏览的页面暂时无法访问"><a href="#提示你所浏览的页面暂时无法访问" class="headerlink" title="提示你所浏览的页面暂时无法访问"></a>提示你所浏览的页面暂时无法访问</h2><p>如果我们在FastAdmin开发过程中遇到此错误，说明我们application/config.php中的app_debug是关闭的，必须开启app_debug为true才可以显示出详细的错误信息。如果开启app_debug仍然显示不出详细错误，请确保php.ini中的display_error为开启状态。</p><hr><p>准备工作：首先确保你的FastAdmin开启了调试模式application/config.php中的app_debug置为true<br>两种定位错误的方法：</p><pre><code>使用Chrome浏览器，打开开发者工具，选中Network(网络)选项卡,刷新一下页面或重新请求一次，定位到我们请求的URL，点击然后在Preview即可看到错误信息直接查看runtime/log目录下的错误日志</code></pre><hr><h2 id="在FastAdmin中如何开启调试模式？"><a href="#在FastAdmin中如何开启调试模式？" class="headerlink" title="在FastAdmin中如何开启调试模式？"></a>在FastAdmin中如何开启调试模式？</h2><p>开启调试模式的方法有两种：</p><blockquote><p>1、打开application/config.php，找到app_debug,将它的值置为true即可</p><p>2、如果你有启用.env环境配置，修改其中app_debug的值为true即可。</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> FastAdmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用功能强大的插件FastReport.Net打印报表实例(转)</title>
      <link href="/2019/06/27/%E4%BD%BF%E7%94%A8%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E6%8F%92%E4%BB%B6FastReport-Net%E6%89%93%E5%8D%B0%E6%8A%A5%E8%A1%A8%E5%AE%9E%E4%BE%8B-%E8%BD%AC/"/>
      <url>/2019/06/27/%E4%BD%BF%E7%94%A8%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E6%8F%92%E4%BB%B6FastReport-Net%E6%89%93%E5%8D%B0%E6%8A%A5%E8%A1%A8%E5%AE%9E%E4%BE%8B-%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="使用功能强大的插件FastReport-Net打印报表实例"><a href="#使用功能强大的插件FastReport-Net打印报表实例" class="headerlink" title="使用功能强大的插件FastReport.Net打印报表实例"></a><a href="https://www.cnblogs.com/wang7/p/4049567.html" target="_blank" rel="noopener">使用功能强大的插件FastReport.Net打印报表实例</a></h1><p>　　我第一次使用FastReport插件做的功能是打印一个十分复杂的excel表格，有几百个字段都需要绑定数据，至少需要4个数据源，而且用到横向、竖向合并单元格。</p><p>　　我不是直接连接数据库，而是使用RegisterData的方式自己注册DataSet对象，所有的表Table都是代码生成，填充到DataSet中，然后注册到控件中。</p><p>　　最开始尝试使用这个插件做一个简单的功能使用的就是下面的例子，不过花了一整天，还请假了4个人都没有搞出来，晚上拿着别人的模板直接修改，然后测试，就通过了。</p><p>　　之前测试，一直都提示未连接到数据源，原因是我直接使用记事本来向模板添加数据源导致的，平时别人使用的数据源都是自己写代码，调用Design的方式得到的，而且只能是winform程序，webform程序不行，因为要启动com组件。</p><p>　　下面是我总结的特别简单的一个方式，使用RegisterData的方式自己注册DataSet对象。</p><p>1，          选择【File】-》【New】 新建FastReport模板，选择下图的1。</p><p>  <img src="https://images0.cnblogs.com/blog/298550/201410/242337573086239.jpg" alt="img">                     </p><p>2，          选择【View】-》【Data】，显示如下，导出Dictionary，保存。</p><p> <img src="https://images0.cnblogs.com/blog/298550/201410/242338049653434.jpg" alt="img"></p><p>3，          编辑导出的.frd文件，编辑完后保存，再导入。</p><p>如下：</p><p>(1)  TableDataSource 是数据源节点。</p><p>(2)  Name是DataSet对象的Table的表名。</p><p>(3)  Column是Table的列，模板绑定数据时，使用Column的Name属性。</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dictionary</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableDataSource</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Table1<span class="token punctuation">"</span></span> <span class="token attr-name">ReferenceName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Data.Table1<span class="token punctuation">"</span></span> <span class="token attr-name">DataType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>System.Int32<span class="token punctuation">"</span></span> <span class="token attr-name">Enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span> <span class="token attr-name">DataType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>System.String<span class="token punctuation">"</span></span> <span class="token attr-name">PropName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Column<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span> <span class="token attr-name">DataType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>System.String<span class="token punctuation">"</span></span> <span class="token attr-name">PropName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Column<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableDataSource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dictionary</span><span class="token punctuation">></span></span></code></pre><p>4，          编辑模板，添加一个Table控件。</p><p>第一行直接双击输入文本；第二行直接将右边的数据源托到单元格中；</p><p>设置边框、字体。</p><p> <img src="https://images0.cnblogs.com/blog/298550/201410/242338225439864.jpg" alt="img"></p><p>5，          添加事件后台方法</p><p>如下图，选中Table1，在事件ManualBuild的后面双击，添加下面的代码：</p><p> <img src="https://images0.cnblogs.com/blog/298550/201410/242338411994165.jpg" alt="img"></p><pre class=" language-csharp"><code class="language-csharp"> <span class="token comment" spellcheck="true">// 控件Table1的构建事件</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">Table1_ManualBuild</span><span class="token punctuation">(</span><span class="token keyword">object</span> sender<span class="token punctuation">,</span> EventArgs e<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        DataSourceBase data1 <span class="token operator">=</span> Report<span class="token punctuation">.</span><span class="token function">GetDataSource</span><span class="token punctuation">(</span><span class="token string">"Table1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取DataSet中表名为Table1的数据源</span>        data1<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化</span>        Table1<span class="token punctuation">.</span><span class="token function">PrintRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 控件Table1打印第0行</span>        Table1<span class="token punctuation">.</span><span class="token function">PrintColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 每打印一行，都要调用 PrintColumn或PrintColumns</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>data1<span class="token punctuation">.</span>HasMoreRows<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 打印重复循环的行</span>        <span class="token punctuation">{</span>            Table1<span class="token punctuation">.</span><span class="token function">PrintRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Table1<span class="token punctuation">.</span><span class="token function">PrintColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            data1<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 读取下一行</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>说明：</p><p>(1)   Table控件是从第0行开始的。</p><p>(2)   绑定数据的重复行，算作一行。</p><p>(3)   输出行之前，要先调用Init() 方法，当有两个数据源，比如data1和data2，data1又是data2的父数据源，需要把data1当做参数，如 data2.Init(data1);</p><p>(4)   每打印一行，都要调用 PrintColumn或PrintColumns</p><p>6，          添加c#代码</p><p>新建一个测试页面test.aspx，将一个FastReport控件拖放到页面上（只有按照过FastReport.net，且引用了FastReport.dll，FastReport.Bars.dll，FastReport.Web.dll之后才可以）</p><p>添加后页面如下：</p><body><p>​    <form id="form1" runat="server">   </form></p><p>​    &lt;cc1:WebReport ID=”webReport” runat=”server” OnStartReport=”WebReport_StartReport” /&gt;</p><p>​       </p></body><p>后台方法：</p><pre class=" language-csharp"><code class="language-csharp">      <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">WebReport_StartReport</span><span class="token punctuation">(</span><span class="token keyword">object</span> sender<span class="token punctuation">,</span> EventArgs e<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            DataSet ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            DataTable table1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table1<span class="token punctuation">.</span>TableName <span class="token operator">=</span> <span class="token string">"Table1"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 一定要设置表名称</span>            ds<span class="token punctuation">.</span>Tables<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>table1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 添加表中的列</span>            table1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"姓名"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table1<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"密码"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 任意添加一些数据</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> maxI <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> maxI<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                DataRow row <span class="token operator">=</span> table1<span class="token punctuation">.</span><span class="token function">NewRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                row<span class="token punctuation">[</span><span class="token string">"姓名"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"我是"</span> <span class="token operator">+</span> i<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                row<span class="token punctuation">[</span><span class="token string">"密码"</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                table1<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            Report FReport <span class="token operator">=</span> <span class="token punctuation">(</span>sender <span class="token keyword">as</span> WebReport<span class="token punctuation">)</span><span class="token punctuation">.</span>Report<span class="token punctuation">;</span>                   <span class="token keyword">string</span> sPath <span class="token operator">=</span> <span class="token function">GetReportsPath</span><span class="token punctuation">(</span><span class="token string">"test.frx"</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>            FReport<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>sPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将DataSet对象注册到FastReport控件中</span>            FReport<span class="token punctuation">.</span><span class="token function">RegisterData</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/// &lt;summary></span>        <span class="token comment" spellcheck="true">/// 获取fastreport模板的路径</span>        <span class="token comment" spellcheck="true">/// &lt;/summary></span>        <span class="token comment" spellcheck="true">/// &lt;param name="sReportName">模板名称&lt;/param></span>        <span class="token comment" spellcheck="true">/// &lt;returns>返回模板路径&lt;/returns></span>        <span class="token keyword">public</span> <span class="token keyword">string</span> <span class="token function">GetReportsPath</span><span class="token punctuation">(</span><span class="token keyword">string</span> sReportName<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> FastReport<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Config<span class="token punctuation">.</span>ApplicationFolder <span class="token operator">+</span> <span class="token string">"Reports\\"</span> <span class="token operator">+</span> sReportName<span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre><p>7，          测试效果</p><p>1对应保存，可以是各种格式；</p><p>2对应打印；</p><p>3对应分页。</p><p> <img src="https://images0.cnblogs.com/blog/298550/201410/242339014495178.jpg" alt="img"></p><p><a href="http://jingyan.baidu.com/article/046a7b3ec2c744f9c37fa944.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/046a7b3ec2c744f9c37fa944.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> FastReport </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastReport使用小结</title>
      <link href="/2019/06/27/FastReport%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
      <url>/2019/06/27/FastReport%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>使用方法整理：</p><p>1.先复制4个文件到debug目录：</p><blockquote><p>FastReport.Bars.dll</p><p>FastReport.dll</p><p>FastReport.Editor.dll</p><p>report.frx</p></blockquote><p>2.引用文件 FastReport.dll(添加引用-&gt;浏览)</p><p>3.代码部分：</p><pre class=" language-csharp"><code class="language-csharp"><span class="token keyword">using</span> FastReport<span class="token punctuation">;</span>        <span class="token keyword">private</span> DataSet FDataSet<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//全局变量</span>        <span class="token keyword">public</span> <span class="token function">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">CreateDataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">CreateDataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// create simple dataset with one table</span>            FDataSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            DataTable table <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table<span class="token punctuation">.</span>TableName <span class="token operator">=</span> <span class="token string">"Employees"</span><span class="token punctuation">;</span>            FDataSet<span class="token punctuation">.</span>Tables<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>            table<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"Name"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Andrew Fuller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Nancy Davolio"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            table<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Margaret Peacock"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">button3_Click</span><span class="token punctuation">(</span><span class="token keyword">object</span> sender<span class="token punctuation">,</span> EventArgs e<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// create report instance</span>            Report report <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// load the existing report</span>            report<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">@".\report.frx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// register the dataset</span>            report<span class="token punctuation">.</span><span class="token function">RegisterData</span><span class="token punctuation">(</span>FDataSet<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// run the report</span>            report<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// free resources used by report</span>            report<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre><hr><h2 id="本想简单的通过变量打印，结果试了一晚上行不通。"><a href="#本想简单的通过变量打印，结果试了一晚上行不通。" class="headerlink" title="本想简单的通过变量打印，结果试了一晚上行不通。"></a>本想简单的通过变量打印，结果试了一晚上行不通。</h2><h2 id="刚好找到一个代码，用他自带的模板-123-fxr-一次过，就他了，贴上代码睡觉了。"><a href="#刚好找到一个代码，用他自带的模板-123-fxr-一次过，就他了，贴上代码睡觉了。" class="headerlink" title="刚好找到一个代码，用他自带的模板(123.fxr)一次过，就他了，贴上代码睡觉了。"></a>刚好找到一个代码，用他自带的模板(123.fxr)一次过，就他了，贴上代码睡觉了。</h2><pre class=" language-csharp"><code class="language-csharp">            Report report <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            report<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Application<span class="token punctuation">.</span>StartupPath<span class="token punctuation">,</span> <span class="token string">@".\123.frx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">string</span> code <span class="token operator">=</span> <span class="token string">"20190627"</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取模板中，对应的BarcodeObject节点-替换模板内容</span>            <span class="token keyword">var</span> barcodeObject <span class="token operator">=</span> report<span class="token punctuation">.</span><span class="token function">FindObject</span><span class="token punctuation">(</span><span class="token string">"Barcode2"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> BarcodeObject<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>barcodeObject <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> barcodeObject<span class="token punctuation">.</span>Text <span class="token operator">=</span> code<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取模板中，对应的TextObject节点-替换模板内容</span>            <span class="token keyword">var</span> textObject <span class="token operator">=</span> report<span class="token punctuation">.</span><span class="token function">FindObject</span><span class="token punctuation">(</span><span class="token string">"txtCode"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> TextObject<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>textObject <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> textObject<span class="token punctuation">.</span>Text <span class="token operator">=</span> code<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//当前操作打印机</span>            <span class="token comment" spellcheck="true">//report.PrintSettings.Printer = cbPrinter.SelectedText;</span>            report<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>## </p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> FastReport </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastReport直接打印相关问题整理(转)</title>
      <link href="/2019/06/26/FastReport%E7%9B%B4%E6%8E%A5%E6%89%93%E5%8D%B0%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86-%E8%BD%AC/"/>
      <url>/2019/06/26/FastReport%E7%9B%B4%E6%8E%A5%E6%89%93%E5%8D%B0%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86-%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.evget.com/article/2013/9/5/19550.html" target="_blank" rel="noopener">https://www.evget.com/article/2013/9/5/19550.html</a></p><h2 id="FastReport直接打印相关问题整理"><a href="#FastReport直接打印相关问题整理" class="headerlink" title="FastReport直接打印相关问题整理"></a>FastReport直接打印相关问题整理</h2><blockquote><p><strong>概述：</strong>最近慧都收集到很多关于FastReport直接打印的需求，小编整理了几种实现方式，供大家参考。</p></blockquote><p>　　最近慧都收集到很多关于<a href="http://www.evget.com/zh-CN/partner/106/default.aspx" target="_blank" rel="noopener">FastReport</a>直接打印的需求，具体就是点击打印后，需要不出现打印对话框也不预览报表，直接开始打印，这种需求在发票单据、条码标签打印中非常常用。小编整理了几种实现<strong>报表直接打印</strong>方式，供大家参考。</p><h2 id="FastReportVCL"><a href="#FastReportVCL" class="headerlink" title="FastReportVCL"></a>FastReportVCL</h2><p>　　在<a href="http://www.evget.com/zh-CN/product/233/feature.aspx" target="_blank" rel="noopener">FastReport VCL</a>中，需要将打印选项的对话框设置为False，也可以用以下代码实现。</p><pre class=" language-delphi"><code class="language-delphi">Report.LoadFromFile('filename');Report.PrepareReport;Report.PrintOptions.ShowDialog := False;Report.Print;</code></pre><h2 id="FastReport-NET（WinForm）"><a href="#FastReport-NET（WinForm）" class="headerlink" title="FastReport .NET（WinForm）"></a>FastReport .NET（WinForm）</h2><p>　　使用<a href="http://www.evget.com/zh-CN/product/1861/feature.aspx" target="_blank" rel="noopener">FastReport.Net</a>在WinForm平台上进行<strong>报表开发</strong>，实现直接打印的方式和VCL相识，将PrintSettings对话框设置为False就行了，也可以使用以下代码实现。</p><pre class=" language-csharp"><code class="language-csharp">Report report <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>report<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>report<span class="token punctuation">.</span><span class="token function">RegisterData</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>report<span class="token punctuation">.</span>PrintSettings<span class="token punctuation">.</span>ShowDialog <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span>report<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="FastReport-NET（WebForm）"><a href="#FastReport-NET（WebForm）" class="headerlink" title="FastReport .NET（WebForm）"></a>FastReport .NET（WebForm）</h2><p>　　使用FastReport ASP.Net版本开发的Web报表时，是不能直接实现直接打印报表，需要先导出为PDF后，再由Adobe Reader的打印功能间接实现。可以参考以下代码。</p><pre class=" language-csharp"><code class="language-csharp"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">Button1_Click</span><span class="token punctuation">(</span><span class="token keyword">object</span> sender<span class="token punctuation">,</span> EventArgs e<span class="token punctuation">)</span> <span class="token punctuation">{</span>     FastReport<span class="token punctuation">.</span>Utils<span class="token punctuation">.</span>Config<span class="token punctuation">.</span>WebMode <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>     <span class="token keyword">using</span> <span class="token punctuation">(</span>Report report <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">{</span>  report<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">"your_report.frx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  report<span class="token punctuation">.</span><span class="token function">RegisterData</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  report<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Export report to PDF stream</span>  FastReport<span class="token punctuation">.</span>Export<span class="token punctuation">.</span>Pdf<span class="token punctuation">.</span>PDFExport pdfExport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FastReport<span class="token punctuation">.</span>Export<span class="token punctuation">.</span>Pdf<span class="token punctuation">.</span>PDFExport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">using</span> <span class="token punctuation">(</span>MemoryStream strm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>      report<span class="token punctuation">.</span><span class="token function">Export</span><span class="token punctuation">(</span>pdfExport<span class="token punctuation">,</span> strm<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// Stream the PDF back to the client as an attachment</span>      Response<span class="token punctuation">.</span><span class="token function">ClearContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      Response<span class="token punctuation">.</span><span class="token function">ClearHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      Response<span class="token punctuation">.</span>Buffer <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>      Response<span class="token punctuation">.</span>ContentType <span class="token operator">=</span> <span class="token string">"Application/PDF"</span><span class="token punctuation">;</span>      Response<span class="token punctuation">.</span><span class="token function">AddHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=report.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      strm<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      strm<span class="token punctuation">.</span><span class="token function">WriteTo</span><span class="token punctuation">(</span>Response<span class="token punctuation">.</span>OutputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>      Response<span class="token punctuation">.</span><span class="token function">End</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><p>　　以上方法是FastReport官方唯一推荐的方法，当然Web报表的直接打印，还有很多替代的方式，如调用IE的HTML页面打印，调用第三方打印插件，如AcitveX打印插件等。但是这些打印方法可能会影响报表的打印质量，浏览器兼容性与稳定性也不能保证，慧都在这里并不提倡。</p>]]></content>
      
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> FastReport </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#配合开发公众号尝试（处理JSON数据)</title>
      <link href="/2019/06/25/C-%E9%85%8D%E5%90%88%E5%BC%80%E5%8F%91%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%9D%E8%AF%95/"/>
      <url>/2019/06/25/C-%E9%85%8D%E5%90%88%E5%BC%80%E5%8F%91%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%9D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>初步尝试用C#直接调用socket操作公众号的信息。</p><p>1.VS的NuGet里安装Newtonsoft.Json包</p><p>2.用现成的平台生成JSON数据的类:</p><blockquote><p><a href="http://json2csharp.chahuo.com/" target="_blank" rel="noopener">http://json2csharp.chahuo.com/</a></p><p><a href="http://tool.chinaz.com/tools/json2entity.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/json2entity.aspx</a></p><p>以上2个均可</p></blockquote><p><code>{&quot;errcode&quot;:42001,&quot;errmsg&quot;:&quot;access_token expired hint: [E24ZKa00228879!]&quot;}</code></p><p>这个调用ACCESS_TOKEN返回的错误，先拿这个测试，具体使用时要判断。</p><p>3.实现类</p><pre class=" language-csharp"><code class="language-csharp"><span class="token keyword">using</span> Newtonsoft<span class="token punctuation">.</span>Json<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Root</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/// &lt;summary></span>            <span class="token comment" spellcheck="true">/// Errcode</span>            <span class="token comment" spellcheck="true">/// &lt;/summary></span>            <span class="token keyword">public</span> <span class="token keyword">int</span> errcode <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">/// &lt;summary></span>            <span class="token comment" spellcheck="true">/// access_token expired hint: [E24ZKa00228879!]</span>            <span class="token comment" spellcheck="true">/// &lt;/summary></span>            <span class="token keyword">public</span> <span class="token keyword">string</span> errmsg <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//string jsonText = "{\"errcode\":42001,\"errmsg\":\"access_token expired hint: [E24ZKa00228879!]\"}"; //要有[]</span>            <span class="token keyword">string</span> str <span class="token operator">=</span> <span class="token function">PostMoths</span><span class="token punctuation">(</span><span class="token string">"https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Root item <span class="token operator">=</span> JsonConvert<span class="token punctuation">.</span><span class="token generic-method function">DeserializeObject<span class="token punctuation">&lt;</span>Root<span class="token punctuation">></span></span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//反序列化json字符串得到对象</span>            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>errcode<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>errmsg<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公众号 </tag>
            
            <tag> C# </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公众号开发</title>
      <link href="/2019/06/25/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/"/>
      <url>/2019/06/25/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>测试号信息</p><!--access_token(需要生成):--><!--22_5jWrCdpC9d3MaMcQbAMlEDydL7xv3CDUiQg6ZtbRRMjRY9MYxL9C5Z3pcw2yTqb0rAd5lmYceTI25KlTSEJwV6WThknJLS8YAewLCUDTQBNfbB78DJoSaifOWKU_3ftv6NTGJ7zD7ccDovYtNFSiABAQIV--><hr><h3 id="微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）"><a href="#微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）" class="headerlink" title="微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）"></a><code>微信自带在线调试工具，入口（左侧开发者工具-》在线接口调试工具）</code></h3><p><code>https://mp.weixin.qq.com/debug/</code></p><p>第一步：<br>先需要基础支持中填写appid与secret获取access_token接口</p><p>或者浏览器GET，返回的就是access_token<br><a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=xxx&amp;secret=xxx" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=xxx&amp;secret=xxx</a><br>返回值：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"access_token"</span><span class="token operator">:</span><span class="token string">"22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL"</span><span class="token punctuation">,</span><span class="token property">"expires_in"</span><span class="token operator">:</span><span class="token number">7200</span><span class="token punctuation">}</span></code></pre><hr><h3 id="获取微信服务器IP地址"><a href="#获取微信服务器IP地址" class="headerlink" title="获取微信服务器IP地址"></a>获取微信服务器IP地址</h3><p><a href="https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL</a><br>返回值</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"ip_list"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"101.226.233.139"</span><span class="token punctuation">,</span><span class="token string">"223.166.222.112"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><hr><h3 id="获取模板列表"><a href="#获取模板列表" class="headerlink" title="获取模板列表"></a>获取模板列表</h3><p><a href="https://api.weixin.qq.com/cgi-bin/template/get_all_private_template?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/template/get_all_private_template?access_token=22_hYHMoiF5_3d_yevA55CgzXlZyM7zsiIJEY8n2WwwGMyB9iZUUNXUVD95yjo1QVm_XsnuypDTJSP92R3kVGtwzL36FgeY6t_VYhRfPdg1L7rV7XXyfOJ1jyrRC7IUUAgAGAFFL</a><br>返回值</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"template_list"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">"template_id"</span><span class="token operator">:</span><span class="token string">"sygppCzs-yyenN92lCuOC7OlMhe6Q84Ow1ZIH3KpmSM"</span><span class="token punctuation">,</span><span class="token property">"title"</span><span class="token operator">:</span><span class="token string">"2265"</span><span class="token punctuation">,</span><span class="token property">"primary_industry"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"deputy_industry"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"content"</span><span class="token operator">:</span><span class="token string">"65656565"</span><span class="token punctuation">,</span><span class="token property">"example"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><hr><h5 id="上传文件得到media-id-gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR-cRB7aqUSdf-bNo0aV5d"><a href="#上传文件得到media-id-gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR-cRB7aqUSdf-bNo0aV5d" class="headerlink" title="上传文件得到media_id    :gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d"></a>上传文件得到media_id    :gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d</h5><hr><h3 id="给用户发文本消息"><a href="#给用户发文本消息" class="headerlink" title="给用户发文本消息"></a>给用户发文本消息</h3><p>（1）发送文本消息</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"touser"</span><span class="token operator">:</span> <span class="token string">"oVd4s6JRqpGeUjxCxPQXnO5l4BC0"</span><span class="token punctuation">,</span>     <span class="token property">"msgtype"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>     <span class="token property">"text"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"哥几个喝几杯!"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h3 id="（2）发送图片消息"><a href="#（2）发送图片消息" class="headerlink" title="（2）发送图片消息"></a>（2）发送图片消息</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"touser"</span><span class="token operator">:</span><span class="token string">"oVd4s6JRqpGeUjxCxPQXnO5l4BC0"</span><span class="token punctuation">,</span>    <span class="token property">"msgtype"</span><span class="token operator">:</span><span class="token string">"image"</span><span class="token punctuation">,</span>    <span class="token property">"image"</span><span class="token operator">:</span>    <span class="token punctuation">{</span>      <span class="token property">"media_id"</span><span class="token operator">:</span><span class="token string">"gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><p>以下部分测试未成功</p><pre><code>{    &quot;touser&quot;:&quot;oVd4s6JRqpGeUjxCxPQXnO5l4BC0&quot;,    &quot;msgtype&quot;:&quot;mpnews&quot;,    &quot;mpnews&quot;:    {         &quot;media_id&quot;:&quot;gQ67vciqNYpmKRxhJudTjbp7emXUcLIAUVZs6dHAlgvR_cRB7aqUSdf_bNo0aV5d&quot;    }}</code></pre><p>发送图文消息（点击跳转到外链） 图文消息条数限制在8条以内，注意，如果图文数超过8，则将会无响应。</p><pre><code>{    &quot;touser&quot;:&quot;oVd4s6JRqpGeUjxCxPQXnO5l4BC0&quot;,    &quot;msgtype&quot;:&quot;news&quot;,    &quot;news&quot;:{        &quot;articles&quot;: [         {             &quot;title&quot;:&quot;Happy Day&quot;,             &quot;description&quot;:&quot;Is Really A Happy Day&quot;,             &quot;url&quot;:&quot;URL&quot;,             &quot;picurl&quot;:&quot;PIC_URL&quot;         },         {             &quot;title&quot;:&quot;Happy Day&quot;,             &quot;description&quot;:&quot;Is Really A Happy Day&quot;,             &quot;url&quot;:&quot;URL&quot;,             &quot;picurl&quot;:&quot;PIC_URL&quot;         }         ]    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 公众号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery主题安装使用</title>
      <link href="/2019/06/24/hexo-theme-matery%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/06/24/hexo-theme-matery%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code>文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre><code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre><code>---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre><code>---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><h3 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情连接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre><code>---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre><code>[{    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http://luokangyuan.com/&quot;,    &quot;title&quot;: &quot;前去学习&quot;}, {    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https://blinkfox.github.io/&quot;,    &quot;title&quot;: &quot;前去学习&quot;}, {    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;ttps://me.csdn.net/jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;}]</code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre><code>npm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre><code>highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime/preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:</code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre><code>npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>search:  path: search.xml  field: post</code></pre><h3 id="中文链接转拼音（可选的）"><a href="#中文链接转拼音（可选的）" class="headerlink" title="中文链接转拼音（可选的）"></a>中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre><code>npm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;</code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（可选的）"><a href="#文章字数统计插件（可选的）" class="headerlink" title="文章字数统计插件（可选的）"></a>文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre><code>npm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre><code>wordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true</code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre><code>npm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre><code>&lt;a href=&quot;https://github.com/blinkfox&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;访问我的GitHub&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;    &lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;&lt;/a&gt;</code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fa-facebook</code></li><li>Twitter: <code>fa-twitter</code></li><li>Google-plus: <code>fa-google-plus</code></li><li>Linkedin: <code>fa-linkedin</code></li><li>Tumblr: <code>fa-tumblr</code></li><li>Medium: <code>fa-medium</code></li><li>Slack: <code>fa-slack</code></li><li>新浪微博: <code>fa-weibo</code></li><li>微信: <code>fa-wechat</code></li><li>QQ: <code>fa-qq</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>4.7.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre><code>[{    &quot;name&quot;: &quot;五月雨变奏电音&quot;,    &quot;artist&quot;: &quot;AnimeVibe&quot;,    &quot;url&quot;: &quot;http://xxx.com/music1.mp3&quot;,    &quot;cover&quot;: &quot;http://xxx.com/music-cover1.png&quot;}, {    &quot;name&quot;: &quot;Take me hand&quot;,    &quot;artist&quot;: &quot;DAISHI DANCE,Cecile Corbel&quot;,    &quot;url&quot;: &quot;/medias/music/music2.mp3&quot;,    &quot;cover&quot;: &quot;/medias/music/cover2.png&quot;}, {    &quot;name&quot;: &quot;Shape of You&quot;,    &quot;artist&quot;: &quot;J.Fla&quot;,    &quot;url&quot;: &quot;http://xxx.com/music3.mp3&quot;,    &quot;cover&quot;: &quot;http://xxx.com/music-cover3.png&quot;}]</code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre><code># 是否在首页显示音乐.music:  enable: true  showTitle: false  title: 听听音乐  fixed: false # 是否开启吸底模式  autoplay: false # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39; # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;list&#39; # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39; # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false # 列表默认折叠  listMaxHeight: # 列表最大高度</code></pre><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code>中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code>中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code>文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre><code>---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---</code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre><code>---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><a href="https://camo.githubusercontent.com/90a2351868a22d39ceac2b4450f8596dc3ce1f58/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/90a2351868a22d39ceac2b4450f8596dc3ce1f58/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67" alt="首页"></a></p><p><a href="https://camo.githubusercontent.com/9a4e16a483752d1a34b222c01bbb36793f26f9df/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d322e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/9a4e16a483752d1a34b222c01bbb36793f26f9df/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d322e706e67" alt="首页推荐文章"></a></p><p><a href="https://camo.githubusercontent.com/47728a9ce38c1abffac23330897a43ba0b3aeb4a/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d332e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/47728a9ce38c1abffac23330897a43ba0b3aeb4a/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d332e706e67" alt="首页文章列表"></a></p><p><a href="https://camo.githubusercontent.com/48b8333fe4fc39346bcc5db8d3b30bf20d74cbdf/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d372e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/48b8333fe4fc39346bcc5db8d3b30bf20d74cbdf/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d372e706e67" alt="首页文章列表"></a></p><p><a href="https://camo.githubusercontent.com/da597fef194876343912db2cb022b180aeff587d/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d382e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/da597fef194876343912db2cb022b180aeff587d/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d382e706e67" alt="首页文章列表"></a></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre><code>/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */.bg-color {    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);}@-webkit-keyframes rainbow {   /* 动态切换背景颜色. */}@keyframes rainbow {    /* 动态切换背景颜色. */}</code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre><code>$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(/medias/banner/&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/06/24/%E6%88%91%E6%98%AF%E5%A5%BD%E5%A4%A9%E6%8D%AE/"/>
      <url>/2019/06/24/%E6%88%91%E6%98%AF%E5%A5%BD%E5%A4%A9%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>sdfsd</p><pre class=" language-csharp"><code class="language-csharp"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span></code></pre><h2 id="我是好天据"><a href="#我是好天据" class="headerlink" title="我是好天据"></a>我是好天据</h2><table><thead><tr><th>123</th><th>123</th><th>123</th></tr></thead><tbody><tr><td>123</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>ddd</td><td></td><td></td></tr></tbody></table><p><img src="C:%5CUsers%5CAdministrator%5CPictures%5Cwallhaven-769351.jpg" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>atom插件</title>
      <link href="/2019/06/09/atom%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/06/09/atom%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>###测试语句</p><pre><code>printf(&quot;测试&quot;);</code></pre><pre><code>sequenceDiagramddddA-&gt;&gt;B: How are you?B-&gt;&gt;A: Great!</code></pre><p>##CODE<br>this is inline code: ‘some code here’.</p><pre><code>javapublic classs hello{}</code></pre><p>==234234==<br>序号 | 项目<br>—|—ddddd<br>11111 | 22222<br>3333 | 4444</p><blockquote><p>zzz</p></blockquote><p>++……++<br>==这个是高亮标识==</p><p>test.jpg</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>about theme yilia</title>
      <link href="/2019/06/05/about-theme-yilia/"/>
      <url>/2019/06/05/about-theme-yilia/</url>
      
        <content type="html"><![CDATA[<p>#git的hexo目录中执行#</p><pre><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre><p>会下载到theme目录中。再改配置<br>修改hexo根目录下的 _</p><pre><code>config.yml ： theme: yilia</code></pre><p>这样就安装好了，但是分类文章显示不出来。<br>还需要:</p><ol><li>node 大于6.0(<pre><code>node -v #查看版本</code></pre></li><li>执行<pre><code>npm i hexo-generator-json-content --save</code></pre></li><li>_config.yml添加配置<pre><code>jsonContent:  meta: false  pages: false  posts:    title: true    date: true    path: true    text: false    raw: false    content: false    slug: false    updated: false    comments: false    link: false    permalink: false    excerpt: false    categories: false    tags: true</code></pre></li></ol><p>```</p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新建模板测试</title>
      <link href="/2019/06/05/%E6%96%B0%E5%BB%BA%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/06/05/%E6%96%B0%E5%BB%BA%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<pre class=" language-cs"><code class="language-cs">printf('string');</code></pre><p>dfsdfsdfsdf</p><p>sdfsd</p><p>###this is ok</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>theme-diaspora使用测试(页面中标准)</title>
      <link href="/2019/06/05/theme-diaspora%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/06/05/theme-diaspora%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>正文：balalala</p>]]></content>
      
      
      <categories>
          
          <category> 分类1 </category>
          
          <category> 分类2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo架设经验总结</title>
      <link href="/2019/06/04/hexo%E6%9E%B6%E8%AE%BE/"/>
      <url>/2019/06/04/hexo%E6%9E%B6%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<p>1.<br>下载安装2个文件(node.js与git)<br><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>安装后检查状态。<br>node -v<br>npm -v<br>git –version</p><p>1.2 配置SSH公钥： 使用下面的命令生成ssh公钥:</p><pre><code>ssh-keygen -t rsa -C &quot;imqiuge&quot;  //一路回车</code></pre><p>生成id_rsa和id_rsa.pub这两个文件，前者是密钥，后者是公钥，用记事本打开id_rsa.pub，复制其中的全部内容，添加到GitHub上 (我的是在C:\Users\Administrator.ssh)<br>到github的setting中的 SSH and GPG keys-&gt;New SSH key-&gt;粘贴key内容</p><p>SSH key添加之后，就可以在本机git bash中进行测试，输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>进行测试，<br>返回Hi username ！You’ve successfully ……说明你已经成功啦！</p><p>2.<br>在任意一个地方新建一个文件夹，在git bash中进入这个文件夹，比如cd /d/Files/hexo/（之后安装的内容会保存在这个文件夹内），输入npm install -g hexo安装hexo即可，如下图（我已经安装过了，就不再安装了）<br>npm install -g hexo<br>npm install hexo –save<br>hexo v #查看是否安装成功<br>hexo init</p><p>下载好了，再输入<br>hexo s #启动本地服务，默认4000端口</p><p>我们可以去看一下我们的源码的位置，就在之前新建的那个文件夹里，在source-&gt;_posts文件夹下，有一篇helloworld的初始化文章，如果想要添加新的文章，可以在命令行输入hexo new ‘filename’,就会生成一个新的.md文件，对它编辑就可以了。</p><p>3.3 上传项目</p><p>　　先打开配置文档_config.yml，对它做如下修改，repository后面的内容是 <a href="mailto:git@gitbub.com" target="_blank" rel="noopener">git@gitbub.com</a>:username/库地址 的形式</p><p>　　注意：type、repository、branch冒号的后面都有一个空格<br>deploy:<br>  type: git<br>  repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:imqiuge/imqiuge.github.io.git<br>  branch: master</p><p>部署好之后，我们就可以上传我们的代码咯</p><p>　　回到命令行窗口，输入npm install hexo-deployer-git –save,</p><p>hexo g #保存git<br>hexo d #上传git</p><p>安装主题：<br>$ git clone <a href="https://github.com/Fechin/hexo-theme-diaspora.git" target="_blank" rel="noopener">https://github.com/Fechin/hexo-theme-diaspora.git</a> diaspora<br>完成了把主题移到themes目录<br>再改_config.yml中的theme: diaspora (注意空格)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown用法</title>
      <link href="/2019/06/03/test/"/>
      <url>/2019/06/03/test/</url>
      
        <content type="html"><![CDATA[<p>代码高亮标签：</p><pre class=" language-excel"><code class="language-excel">| 1C                      | 1c                                                           ||-------------------------|--------------------------------------------------------------|| ABNF                    | abnf                                                         || Access logs             | accesslog                                                    || Ada                     | ada                                                          || ARM assembler           | armasm, arm                                                  || AVR assembler           | avrasm                                                       || ActionScript            | actionscript, as                                             || Apache                  | apache, apacheconf                                           || AppleScript             | applescript, osascript                                       || AsciiDoc                | asciidoc, adoc                                               || AspectJ                 | aspectj                                                      || AutoHotkey              | autohotkey                                                   || AutoIt                  | autoit                                                       || Awk                     | awk, mawk, nawk, gawk                                        || Axapta                  | axapta                                                       || Bash                    | bash, sh, zsh                                                || Basic                   | basic                                                        || BNF                     | bnf                                                          || Brainfuck               | brainfuck, bf                                                || C\#                     | cs, csharp                                                   || C\+\+                   | cpp, c, cc, h, c\+\+, h\+\+, hpp                             || C/AL                    | cal                                                          || Cache Object Script     | cos, cls                                                     || CMake                   | cmake, cmake\.in                                             || Coq                     | coq                                                          || CSP                     | csp                                                          || CSS                     | css                                                          || Cap’n Proto             | capnproto, capnp                                             || Clojure                 | clojure, clj                                                 || CoffeeScript            | coffeescript, coffee, cson, iced                             || Crmsh                   | crmsh, crm, pcmk                                             || Crystal                 | crystal, cr                                                  || D                       | d                                                            || DNS Zone file           | dns, zone, bind                                              || DOS                     | dos, bat, cmd                                                || Dart                    | dart                                                         || Delphi                  | delphi, dpr, dfm, pas, pascal, freepascal, lazarus, lpr, lfm || Diff                    | diff, patch                                                  || Django                  | django, jinja                                                || Dockerfile              | dockerfile, docker                                           || dsconfig                | dsconfig                                                     || DTS \(Device Tree\)     | dts                                                          || Dust                    | dust, dst                                                    || EBNF                    | ebnf                                                         || Elixir                  | elixir                                                       || Elm                     | elm                                                          || Erlang                  | erlang, erl                                                  || Excel                   | excel, xls, xlsx                                             || F\#                     | fsharp, fs                                                   || FIX                     | fix                                                          || Fortran                 | fortran, f90, f95                                            || G\-Code                 | gcode, nc                                                    || Gams                    | gams, gms                                                    || GAUSS                   | gauss, gss                                                   || Gherkin                 | gherkin                                                      || Go                      | go, golang                                                   || Golo                    | golo, gololang                                               || Gradle                  | gradle                                                       || Groovy                  | groovy                                                       || HTML, XML               | xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist            || HTTP                    | http, https                                                  || Haml                    | haml                                                         || Handlebars              | handlebars, hbs, html\.hbs, html\.handlebars                 || Haskell                 | haskell, hs                                                  || Haxe                    | haxe, hx                                                     || Hy                      | hy, hylang                                                   || Ini                     | ini                                                          || Inform7                 | inform7, i7                                                  || IRPF90                  | irpf90                                                       || JSON                    | json                                                         || Java                    | java, jsp                                                    || JavaScript              | javascript, js, jsx                                          || Leaf                    | leaf                                                         || Lasso                   | lasso, ls, lassoscript                                       || Less                    | less                                                         || LDIF                    | ldif                                                         || Lisp                    | lisp                                                         || LiveCode Server         | livecodeserver                                               || LiveScript              | livescript, ls                                               || Lua                     | lua                                                          || Makefile                | makefile, mk, mak                                            || Markdown                | markdown, md, mkdown, mkd                                    || Mathematica             | mathematica, mma                                             || Matlab                  | matlab                                                       || Maxima                  | maxima                                                       || Maya Embedded Language  | mel                                                          || Mercury                 | mercury                                                      || Mizar                   | mizar                                                        || Mojolicious             | mojolicious                                                  || Monkey                  | monkey                                                       || Moonscript              | moonscript, moon                                             || N1QL                    | n1ql                                                         || NSIS                    | nsis                                                         || Nginx                   | nginx, nginxconf                                             || Nimrod                  | nimrod, nim                                                  || Nix                     | nix                                                          || OCaml                   | ocaml, ml                                                    || Objective C             | objectivec, mm, objc, obj\-c                                 || OpenGL Shading Language | glsl                                                         || OpenSCAD                | openscad, scad                                               || Oracle Rules Language   | ruleslanguage                                                || Oxygene                 | oxygene                                                      || PF                      | pf, pf\.conf                                                 || PHP                     | php, php3, php4, php5, php6                                  || Parser3                 | parser3                                                      || Perl                    | perl, pl, pm                                                 || Pony                    | pony                                                         || PowerShell              | powershell, ps                                               || Processing              | processing                                                   || Prolog                  | prolog                                                       || Protocol Buffers        | protobuf                                                     || Puppet                  | puppet, pp                                                   || Python                  | python, py, gyp                                              || Python profiler results | profile                                                      || Q                       | k, kdb                                                       || QML                     | qml                                                          || R                       | r                                                            || RenderMan RIB           | rib                                                          || RenderMan RSL           | rsl                                                          || Roboconf                | graph, instances                                             || Ruby                    | ruby, rb, gemspec, podspec, thor, irb                        || Rust                    | rust, rs                                                     || SCSS                    | scss                                                         || SQL                     | sql                                                          || STEP Part 21            | p21, step, stp                                               || Scala                   | scala                                                        || Scheme                  | scheme                                                       || Scilab                  | scilab, sci                                                  || Shell                   | shell, console                                               || Smali                   | smali                                                        || Smalltalk               | smalltalk, st                                                || Stan                    | stan                                                         || Stata                   | stata                                                        || Stylus                  | stylus, styl                                                 || SubUnit                 | subunit                                                      || Swift                   | swift                                                        || Test Anything Protocol  | tap                                                          || Tcl                     | tcl, tk                                                      || TeX                     | tex                                                          || Thrift                  | thrift                                                       || TP                      | tp                                                           || Twig                    | twig, craftcms                                               || TypeScript              | typescript, ts                                               || VB\.Net                 | vbnet, vb                                                    || VBScript                | vbscript, vbs                                                || VHDL                    | vhdl                                                         || Vala                    | vala                                                         || Verilog                 | verilog, v                                                   || Vim Script              | vim                                                          || x86 Assembly            | x86asm                                                       || XL                      | xl, tao                                                      || XQuery                  | xpath, xq                                                    || Zephir                  | zephir, zep                                                  |</code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class=" language-excel"><code class="language-excel">办公桌        学工处    3办公椅        学工处    5皮椅        学工处    4文件柜        学工处    6监控电脑        学工处    5</code></pre><pre class=" language-cs"><code class="language-cs">        /// <summary>        /// 接口服务器发送的消息        /// </summary>        private void Receive()        {            try            {                while (true)                {                    byte[] buffer = new byte[2048];                    //实际接收到的字节数                    int r = socketSend.Receive(buffer);                    if (r == 0)                    {                        break;                    }                    else                    {                        //判断发送的数据的类型                        //表示发送的是文字消息                        //string str = Encoding.Default.GetString(buffer, 1, r - 1); //原写法，第二位参数的区别，第一个字符一直收不到，所以改成0再观察                        string str = Encoding.Default.GetString(buffer, 0, r - 1);                        this.txt_Log.Invoke(receiveCallBack, "接收远程服务器:" + socketSend.RemoteEndPoint + "发送的消息:" + str);                        List<string> striparr = str.Split(new string[] { "\r\n" }, StringSplitOptions.None).ToList();                        striparr = striparr.Where(s => !string.IsNullOrEmpty(s)).ToList();                        //GetMsgType(striparr);                        if (isCardMsg(striparr))                        {                            textBox1.Invoke(setCallBack, "收到刷卡信息...");                            string sReasonNo = striparr[1].Substring(10); //ReasonNo: 1标志                            string scardNO = striparr[2].Substring(4);//以下开始头默认带4个字符，处理掉                            string sConsumerNO = striparr[3].Substring(4);                            string sName = striparr[4].Substring(4);                            string sGroup = striparr[5].Substring(4);                            sGroup = CutGroup(sGroup);                            string sTime = striparr[6].Substring(4);                            string sLocal = striparr[7].Substring(4);                            string sInOrOut = striparr[8].Substring(4);                            string sStatus = striparr[9].Substring(4);                            label1.Text = "姓名：" + sName;                            label2.Text = "班级：" + sGroup;                            label3.Text = "日期：" + sTime;                            label4.Text = "状态：" + sStatus;                            string sPicPath = System.Environment.CurrentDirectory;  //显示图片                            sPicPath += @"\PIC\" + sName + ".jpg";                            //MessageBox.Show(sPicPath);                            if (System.IO.File.Exists(sPicPath))                                pictureBox1.Load(sPicPath);                            else                                pictureBox1.Image = null;                            string sNameSoundPath = System.Environment.CurrentDirectory;//语音播放姓名                            sNameSoundPath += @"\Sound\User\" + sName + ".wav";                            if (System.IO.File.Exists(sNameSoundPath))                            {                                System.Media.SoundPlayer player = new System.Media.SoundPlayer(sNameSoundPath);                                player.Play();//简单播放一遍                            }                        }                    }                }            }            catch (Exception ex)            {                MessageBox.Show("接收服务端发送的消息出错:" + ex.ToString());            }        }</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World22222222222222222</title>
      <link href="/2019/06/03/hello2/"/>
      <url>/2019/06/03/hello2/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
